{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\build-youtube-final-code\\\\client\\\\src\\\\components\\\\AddComment.js\";\nimport React from \"react\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nimport defaultAvatar from \"../assets/default-avatar.png\";\nimport { useAuth } from \"../context/auth-context\";\nimport Wrapper from \"../styles/CommentList\";\nimport { addComment } from \"../utils/api-client\";\nimport CommentList from \"./CommentList\";\n\nfunction AddComment({\n  video\n}) {\n  const user = useAuth();\n  const [openSnackbar] = useSnackbar();\n  const [comment, setComment] = React.useState(\"\");\n\n  function handleAddComment(event) {\n    if (event.keyCode === 13) {\n      event.target.blur();\n\n      if (!comment.trim()) {\n        return openSnackbar(\"Please write a comment\");\n      }\n\n      addComment({\n        video,\n        comment\n      }).then(() => setComment(\"\")).catch(() => openSnackbar(\"Sign in to add a comment\"));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, video.comments.length, \" comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, user ? /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar,\n    alt: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: defaultAvatar,\n    alt: \"default user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Add a public comment...\",\n    value: comment,\n    onKeyDown: handleAddComment,\n    onChange: event => setComment(event.target.value),\n    rows: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CommentList, {\n    comments: video.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AddComment;","map":{"version":3,"sources":["C:/Users/User/Desktop/build-youtube-final-code/client/src/components/AddComment.js"],"names":["React","useSnackbar","defaultAvatar","useAuth","Wrapper","addComment","CommentList","AddComment","video","user","openSnackbar","comment","setComment","useState","handleAddComment","event","keyCode","target","blur","trim","then","catch","comments","length","avatar","username","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AAC7B,QAAMC,IAAI,GAAGN,OAAO,EAApB;AACA,QAAM,CAACO,YAAD,IAAiBT,WAAW,EAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAA9B;;AAEA,WAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxBD,MAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb;;AAEA,UAAI,CAACP,OAAO,CAACQ,IAAR,EAAL,EAAqB;AACnB,eAAOT,YAAY,CAAC,wBAAD,CAAnB;AACD;;AAEDL,MAAAA,UAAU,CAAC;AAAEG,QAAAA,KAAF;AAASG,QAAAA;AAAT,OAAD,CAAV,CACGS,IADH,CACQ,MAAMR,UAAU,CAAC,EAAD,CADxB,EAEGS,KAFH,CAES,MAAMX,YAAY,CAAC,0BAAD,CAF3B;AAGD;AACF;;AAED,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACc,QAAN,CAAeC,MAApB,cADF,eAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IAAI,gBACH;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACe,MAAf;AAAuB,IAAA,GAAG,EAAEf,IAAI,CAACgB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,gBAGH;AAAK,IAAA,GAAG,EAAEvB,aAAV;AAAyB,IAAA,GAAG,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAME;AACE,IAAA,WAAW,EAAC,yBADd;AAEE,IAAA,KAAK,EAAES,OAFT;AAGE,IAAA,SAAS,EAAEG,gBAHb;AAIE,IAAA,QAAQ,EAAGC,KAAD,IAAWH,UAAU,CAACG,KAAK,CAACE,MAAN,CAAaS,KAAd,CAJjC;AAKE,IAAA,IAAI,EAAE,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF,eAkBE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAElB,KAAK,CAACc,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD;;AAED,eAAef,UAAf","sourcesContent":["import React from \"react\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nimport defaultAvatar from \"../assets/default-avatar.png\";\nimport { useAuth } from \"../context/auth-context\";\nimport Wrapper from \"../styles/CommentList\";\nimport { addComment } from \"../utils/api-client\";\nimport CommentList from \"./CommentList\";\n\nfunction AddComment({ video }) {\n  const user = useAuth();\n  const [openSnackbar] = useSnackbar();\n  const [comment, setComment] = React.useState(\"\");\n\n  function handleAddComment(event) {\n    if (event.keyCode === 13) {\n      event.target.blur();\n\n      if (!comment.trim()) {\n        return openSnackbar(\"Please write a comment\");\n      }\n\n      addComment({ video, comment })\n        .then(() => setComment(\"\"))\n        .catch(() => openSnackbar(\"Sign in to add a comment\"));\n    }\n  }\n\n  return (\n    <Wrapper>\n      <h3>{video.comments.length} comments</h3>\n\n      <div className=\"add-comment\">\n        {user ? (\n          <img src={user.avatar} alt={user.username} />\n        ) : (\n          <img src={defaultAvatar} alt=\"default user\" />\n        )}\n        <textarea\n          placeholder=\"Add a public comment...\"\n          value={comment}\n          onKeyDown={handleAddComment}\n          onChange={(event) => setComment(event.target.value)}\n          rows={1}\n        />\n      </div>\n\n      <CommentList comments={video.comments} />\n    </Wrapper>\n  );\n}\n\nexport default AddComment;\n"]},"metadata":{},"sourceType":"module"}