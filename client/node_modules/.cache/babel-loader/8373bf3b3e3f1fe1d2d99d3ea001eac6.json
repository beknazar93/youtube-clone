{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\build-youtube-final-code\\\\client\\\\src\\\\components\\\\ChannelSuggestions.js\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Wrapper from \"../styles/Trending\";\nimport { client } from \"../utils/api-client\";\nimport Skeleton from \"../skeletons/SuggestionSkeleton\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport ChannelInfo from \"./ChannelInfo\";\n\nfunction ChannelSuggestions() {\n  const {\n    data: channels,\n    isLoading,\n    isError,\n    error,\n    isSuccess\n  } = useQuery(\"Channels\", () => client.get(\"/users\").then(res => res.data.channels));\n  if (isLoading) return /*#__PURE__*/React.createElement(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  });\n  if (isError) return /*#__PURE__*/React.createElement(ErrorMessage, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Suggestions For You\"), isSuccess ? channels.map(channel => /*#__PURE__*/React.createElement(ChannelInfo, {\n    key: channel.id,\n    channel: channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })) : null);\n}\n\nexport default ChannelSuggestions;","map":{"version":3,"sources":["C:/Users/User/Desktop/build-youtube-final-code/client/src/components/ChannelSuggestions.js"],"names":["React","useQuery","Wrapper","client","Skeleton","ErrorMessage","ChannelInfo","ChannelSuggestions","data","channels","isLoading","isError","error","isSuccess","get","then","res","map","channel","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,QAAM;AACJC,IAAAA,IAAI,EAAEC,QADF;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA;AALI,MAMFZ,QAAQ,CAAC,UAAD,EAAa,MACvBE,MAAM,CAACW,GAAP,CAAW,QAAX,EAAqBC,IAArB,CAA2BC,GAAD,IAASA,GAAG,CAACR,IAAJ,CAASC,QAA5C,CADU,CANZ;AAUA,MAAIC,SAAJ,EAAe,oBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACf,MAAIC,OAAJ,EAAa,oBAAO,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEGC,SAAS,GACNJ,QAAQ,CAACQ,GAAT,CAAcC,OAAD,iBACX,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAIN,IANN,CADF;AAUD;;AAED,eAAeX,kBAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Wrapper from \"../styles/Trending\";\nimport { client } from \"../utils/api-client\";\nimport Skeleton from \"../skeletons/SuggestionSkeleton\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport ChannelInfo from \"./ChannelInfo\";\n\nfunction ChannelSuggestions() {\n  const {\n    data: channels,\n    isLoading,\n    isError,\n    error,\n    isSuccess,\n  } = useQuery(\"Channels\", () =>\n    client.get(\"/users\").then((res) => res.data.channels)\n  );\n\n  if (isLoading) return <Skeleton />;\n  if (isError) return <ErrorMessage error={error} />;\n\n  return (\n    <Wrapper>\n      <h2>Suggestions For You</h2>\n      {isSuccess\n        ? channels.map((channel) => (\n            <ChannelInfo key={channel.id} channel={channel} />\n          ))\n        : null}\n    </Wrapper>\n  );\n}\n\nexport default ChannelSuggestions;\n"]},"metadata":{},"sourceType":"module"}