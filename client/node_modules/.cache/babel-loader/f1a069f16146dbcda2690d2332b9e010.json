{"ast":null,"code":"import { queryCache } from \"react-query\";\nimport axios from \"axios\";\nexport const client = axios.create({\n  baseURL: \"/api/v1\"\n});\nexport function authenticate(response) {\n  console.log({\n    response\n  });\n  client({\n    method: \"POST\",\n    url: \"/auth/google-login\",\n    data: {\n      idToken: response.tokenId\n    }\n  }).then(response => {\n    console.log(\"Sign in success: \", response);\n    window.location.assign(window.location.href);\n  }).catch(error => {\n    console.log(\"Sign in error: \", error.response);\n  });\n}\nexport async function signoutUser() {\n  await client.get(\"/auth/signout\");\n  window.location.pathname = \"/\";\n}\nexport async function updateUser(user) {\n  await client.put(\"/users\", user);\n  await queryCache.invalidateQueries(\"Channel\");\n}\nexport async function addVideoView(videoId) {\n  await client.get(`/videos/${videoId}/view`);\n  await queryCache.invalidateQueries(\"History\");\n}\nexport async function addComment({\n  video,\n  comment\n}) {\n  await client.post(`/videos/${video.id}/comments`, {\n    text: comment\n  });\n  await queryCache.invalidateQueries([\"WatchVideo\", video.id]);\n}\nexport async function addVideo(video) {\n  await client.post(\"/videos\", video);\n  await queryCache.invalidateQueries(\"Channel\");\n}\nexport async function toggleSubscribeUser(channelId) {\n  await client.get(`/users/${channelId}/toggle-subscribe`);\n  await queryCache.invalidateQueries(\"Channel\");\n  await queryCache.invalidateQueries(\"Channels\");\n  await queryCache.invalidateQueries(\"Subscriptions\");\n  await queryCache.invalidateQueries(\"AuthProvider\");\n  await queryCache.invalidateQueries(\"WatchVideo\");\n  await queryCache.invalidateQueries(\"SearchResults\");\n}\nexport async function likeVideo(videoId) {\n  await client.get(`/videos/${videoId}/like`);\n  await queryCache.invalidateQueries([\"WatchVideo\", videoId]);\n}\nexport async function dislikeVideo(videoId) {\n  await client.get(`/videos/${videoId}/dislike`);\n  await queryCache.invalidateQueries([\"WatchVideo\", videoId]);\n}\nexport async function deleteVideo(videoId) {\n  await client.delete(`/videos/${videoId}`);\n  await queryCache.invalidateQueries(\"Channel\");\n}\nexport async function deleteComment(comment) {\n  await client.delete(`/videos/${comment.videoId}/comments/${comment.id}`);\n  await queryCache.invalidateQueries(\"WatchVideo\");\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/build-youtube-final-code/client/src/utils/api-client.js"],"names":["queryCache","axios","client","create","baseURL","authenticate","response","console","log","method","url","data","idToken","tokenId","then","window","location","assign","href","catch","error","signoutUser","get","pathname","updateUser","user","put","invalidateQueries","addVideoView","videoId","addComment","video","comment","post","id","text","addVideo","toggleSubscribeUser","channelId","likeVideo","dislikeVideo","deleteVideo","delete","deleteComment"],"mappings":"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","sourcesContent":["import { queryCache } from \"react-query\";\nimport axios from \"axios\";\n\nexport const client = axios.create({\n  baseURL: \"/api/v1\",\n});\n\nexport function authenticate(response) {\n  console.log({ response });\n  client({\n    method: \"POST\",\n    url: \"/auth/google-login\",\n    data: { idToken: response.tokenId },\n  })\n    .then((response) => {\n      console.log(\"Sign in success: \", response);\n      window.location.assign(window.location.href);\n    })\n    .catch((error) => {\n      console.log(\"Sign in error: \", error.response);\n    });\n}\n\nexport async function signoutUser() {\n  await client.get(\"/auth/signout\");\n  window.location.pathname = \"/\";\n}\n\nexport async function updateUser(user) {\n  await client.put(\"/users\", user);\n  await queryCache.invalidateQueries(\"Channel\");\n}\n\nexport async function addVideoView(videoId) {\n  await client.get(`/videos/${videoId}/view`);\n  await queryCache.invalidateQueries(\"History\");\n}\n\nexport async function addComment({ video, comment }) {\n  await client.post(`/videos/${video.id}/comments`, { text: comment });\n  await queryCache.invalidateQueries([\"WatchVideo\", video.id]);\n}\n\nexport async function addVideo(video) {\n  await client.post(\"/videos\", video);\n  await queryCache.invalidateQueries(\"Channel\");\n}\n\nexport async function toggleSubscribeUser(channelId) {\n  await client.get(`/users/${channelId}/toggle-subscribe`);\n  await queryCache.invalidateQueries(\"Channel\");\n  await queryCache.invalidateQueries(\"Channels\");\n  await queryCache.invalidateQueries(\"Subscriptions\");\n  await queryCache.invalidateQueries(\"AuthProvider\");\n  await queryCache.invalidateQueries(\"WatchVideo\");\n  await queryCache.invalidateQueries(\"SearchResults\");\n}\n\nexport async function likeVideo(videoId) {\n  await client.get(`/videos/${videoId}/like`);\n  await queryCache.invalidateQueries([\"WatchVideo\", videoId]);\n}\n\nexport async function dislikeVideo(videoId) {\n  await client.get(`/videos/${videoId}/dislike`);\n  await queryCache.invalidateQueries([\"WatchVideo\", videoId]);\n}\n\nexport async function deleteVideo(videoId) {\n  await client.delete(`/videos/${videoId}`);\n  await queryCache.invalidateQueries(\"Channel\");\n}\n\nexport async function deleteComment(comment) {\n  await client.delete(`/videos/${comment.videoId}/comments/${comment.id}`);\n  await queryCache.invalidateQueries(\"WatchVideo\");\n}\n"]},"metadata":{},"sourceType":"module"}