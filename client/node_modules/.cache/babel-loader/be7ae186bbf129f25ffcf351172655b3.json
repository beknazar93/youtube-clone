{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\build-youtube-final-code\\\\client\\\\src\\\\pages\\\\Channel.js\";\n// @ts-nocheck\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { VidIcon } from \"../components/Icons\";\nimport SignUpCard from \"../components/SignUpCard\";\nimport { useAuth } from \"../context/auth-context\";\nimport Wrapper from \"../styles/Channel\";\nimport { client, toggleSubscribeUser } from \"../utils/api-client\";\nimport Skeleton from \"../skeletons/ChannelSkeleton\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport EditProfile from \"../components/EditProfile\";\nimport useAuthAction from \"../hooks/use-auth-action\";\nimport ChannelTabChannels from \"../components/ChannelTabChannels\";\nimport ChannelTabAbout from \"../components/ChannelTabAbout\";\nimport ChannelTabVideo from \"../components/ChannelTabVideo\";\nimport Button from \"../styles/Button\";\nconst activeTabStyle = {\n  borderBottom: \"2px solid white\",\n  color: \"white\"\n};\n\nfunction Channel() {\n  const user = useAuth();\n  const handleAuthAction = useAuthAction();\n  const [tab, setTab] = React.useState(\"VIDEOS\");\n  const {\n    channelId\n  } = useParams();\n  const loggedInUserId = user ? user.id : undefined;\n  const userId = channelId || loggedInUserId;\n  const {\n    data: channel,\n    isLoading,\n    isError,\n    error\n  } = useQuery([\"Channel\", userId], () => client.get(`/users/${userId}`).then(res => res.data.user), {\n    enabled: userId\n  });\n\n  if (!user) {\n    return /*#__PURE__*/React.createElement(SignUpCard, {\n      icon: /*#__PURE__*/React.createElement(VidIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }),\n      title: \"Manage your videos\",\n      description: \"Sign in to upload and manage your videos, pre-recorded or live\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (isLoading) return /*#__PURE__*/React.createElement(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  });\n  if (isError) return /*#__PURE__*/React.createElement(ErrorMessage, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  });\n\n  function handleToggleSubscribe() {\n    handleAuthAction(toggleSubscribeUser, channel.id);\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    editProfile: channel.isMe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: channel.cover,\n    alt: `${channel.username} cover`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar lg\",\n    src: channel.avatar,\n    alt: `${channel.username} avatar`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, channel.username), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, channel.subscribersCount, \" subscribers\"))), channel.isMe && /*#__PURE__*/React.createElement(EditProfile, {\n    profile: channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }\n  }), !channel.isMe && !channel.isSubscribed && /*#__PURE__*/React.createElement(Button, {\n    onClick: handleToggleSubscribe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Subscribe\"), !channel.isMe && channel.isSubscribed && /*#__PURE__*/React.createElement(Button, {\n    grey: true,\n    onClick: handleToggleSubscribe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Subscribed\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    style: tab === \"VIDEOS\" ? activeTabStyle : {},\n    onClick: () => setTab(\"VIDEOS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Videos\"), /*#__PURE__*/React.createElement(\"li\", {\n    style: tab === \"CHANNELS\" ? activeTabStyle : {},\n    onClick: () => setTab(\"CHANNELS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Channels\"), /*#__PURE__*/React.createElement(\"li\", {\n    style: tab === \"ABOUT\" ? activeTabStyle : {},\n    onClick: () => setTab(\"ABOUT\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"About\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, tab === \"VIDEOS\" && /*#__PURE__*/React.createElement(ChannelTabVideo, {\n    videos: channel.videos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 30\n    }\n  }), tab === \"CHANNELS\" && /*#__PURE__*/React.createElement(ChannelTabChannels, {\n    channels: channel.channels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), tab === \"ABOUT\" && /*#__PURE__*/React.createElement(ChannelTabAbout, {\n    about: channel.about,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  })));\n}\n\nexport default Channel;","map":{"version":3,"sources":["C:/Users/User/Desktop/build-youtube-final-code/client/src/pages/Channel.js"],"names":["React","useQuery","useParams","VidIcon","SignUpCard","useAuth","Wrapper","client","toggleSubscribeUser","Skeleton","ErrorMessage","EditProfile","useAuthAction","ChannelTabChannels","ChannelTabAbout","ChannelTabVideo","Button","activeTabStyle","borderBottom","color","Channel","user","handleAuthAction","tab","setTab","useState","channelId","loggedInUserId","id","undefined","userId","data","channel","isLoading","isError","error","get","then","res","enabled","handleToggleSubscribe","isMe","cover","username","avatar","subscribersCount","isSubscribed","videos","channels","about"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { VidIcon } from \"../components/Icons\";\nimport SignUpCard from \"../components/SignUpCard\";\nimport { useAuth } from \"../context/auth-context\";\nimport Wrapper from \"../styles/Channel\";\nimport { client, toggleSubscribeUser } from \"../utils/api-client\";\nimport Skeleton from \"../skeletons/ChannelSkeleton\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport EditProfile from \"../components/EditProfile\";\nimport useAuthAction from \"../hooks/use-auth-action\";\nimport ChannelTabChannels from \"../components/ChannelTabChannels\";\nimport ChannelTabAbout from \"../components/ChannelTabAbout\";\nimport ChannelTabVideo from \"../components/ChannelTabVideo\";\nimport Button from \"../styles/Button\";\n\nconst activeTabStyle = {\n  borderBottom: \"2px solid white\",\n  color: \"white\",\n};\n\nfunction Channel() {\n  const user = useAuth();\n  const handleAuthAction = useAuthAction();\n  const [tab, setTab] = React.useState(\"VIDEOS\");\n  const { channelId } = useParams();\n\n  const loggedInUserId = user ? user.id : undefined;\n  const userId = channelId || loggedInUserId;\n\n  const { data: channel, isLoading, isError, error } = useQuery(\n    [\"Channel\", userId],\n    () => client.get(`/users/${userId}`).then((res) => res.data.user),\n    {\n      enabled: userId,\n    }\n  );\n\n  if (!user) {\n    return (\n      <SignUpCard\n        icon={<VidIcon />}\n        title=\"Manage your videos\"\n        description=\"Sign in to upload and manage your videos, pre-recorded or live\"\n      />\n    );\n  }\n\n  if (isLoading) return <Skeleton />;\n  if (isError) return <ErrorMessage error={error} />;\n\n  function handleToggleSubscribe() {\n    handleAuthAction(toggleSubscribeUser, channel.id);\n  }\n\n  return (\n    <Wrapper editProfile={channel.isMe}>\n      <div className=\"cover\">\n        <img src={channel.cover} alt={`${channel.username} cover`} />\n      </div>\n\n      <div className=\"header-tabs\">\n        <div className=\"header\">\n          <div className=\"flex-row\">\n            <img\n              className=\"avatar lg\"\n              src={channel.avatar}\n              alt={`${channel.username} avatar`}\n            />\n            <div>\n              <h3>{channel.username}</h3>\n              <span className=\"secondary\">\n                {channel.subscribersCount} subscribers\n              </span>\n            </div>\n          </div>\n          {channel.isMe && <EditProfile profile={channel} />}\n\n          {!channel.isMe && !channel.isSubscribed && (\n            <Button onClick={handleToggleSubscribe}>Subscribe</Button>\n          )}\n\n          {!channel.isMe && channel.isSubscribed && (\n            <Button grey onClick={handleToggleSubscribe}>\n              Subscribed\n            </Button>\n          )}\n        </div>\n\n        <div className=\"tabs\">\n          <ul className=\"secondary\">\n            <li\n              style={tab === \"VIDEOS\" ? activeTabStyle : {}}\n              onClick={() => setTab(\"VIDEOS\")}\n            >\n              Videos\n            </li>\n            <li\n              style={tab === \"CHANNELS\" ? activeTabStyle : {}}\n              onClick={() => setTab(\"CHANNELS\")}\n            >\n              Channels\n            </li>\n            <li\n              style={tab === \"ABOUT\" ? activeTabStyle : {}}\n              onClick={() => setTab(\"ABOUT\")}\n            >\n              About\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"tab\">\n        {tab === \"VIDEOS\" && <ChannelTabVideo videos={channel.videos} />}\n        {tab === \"CHANNELS\" && (\n          <ChannelTabChannels channels={channel.channels} />\n        )}\n        {tab === \"ABOUT\" && <ChannelTabAbout about={channel.about} />}\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}