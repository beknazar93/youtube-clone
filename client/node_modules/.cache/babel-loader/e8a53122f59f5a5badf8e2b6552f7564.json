{"ast":null,"code":"import { useRef, useReducer, useEffect, createElement, useContext, useMemo, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useId } from '@reach/auto-id';\nimport { Popover } from '@reach/popover';\nimport { useDescendantsInit, DescendantProvider, useDescendants, useDescendantKeyDown, createDescendantContext, useDescendant } from '@reach/descendants';\nimport { makeId, useCheckStyles, isFunction, forwardRefWithAs, useForkedRef, wrapEvent, usePrevious, isString, noop, getOwnerDocument, createNamedContext } from '@reach/utils';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n} // Actions\n\n\nvar CLEAR_SELECTION_INDEX = \"CLEAR_SELECTION_INDEX\";\nvar CLICK_MENU_ITEM = \"CLICK_MENU_ITEM\";\nvar CLOSE_MENU = \"CLOSE_MENU\";\nvar OPEN_MENU_AT_FIRST_ITEM = \"OPEN_MENU_AT_FIRST_ITEM\";\nvar OPEN_MENU_AT_INDEX = \"OPEN_MENU_AT_INDEX\";\nvar OPEN_MENU_CLEARED = \"OPEN_MENU_CLEARED\";\nvar SEARCH_FOR_ITEM = \"SEARCH_FOR_ITEM\";\nvar SELECT_ITEM_AT_INDEX = \"SELECT_ITEM_AT_INDEX\";\nvar SET_BUTTON_ID = \"SET_BUTTON_ID\";\nvar MenuDescendantContext = /*#__PURE__*/createDescendantContext(\"MenuDescendantContext\");\nvar MenuContext = /*#__PURE__*/createNamedContext(\"MenuContext\", {});\nvar initialState = {\n  // The button ID is needed for aria controls and can be set directly and\n  // updated for top-level use via context. Otherwise a default is set by useId.\n  // TODO: Consider deprecating direct ID in 1.0 in favor of id at the top level\n  //       for passing deterministic IDs to descendent components.\n  buttonId: null,\n  // Whether or not the menu is expanded\n  isExpanded: false,\n  // When a user begins typing a character string, the selection will change if\n  // a matching item is found\n  typeaheadQuery: \"\",\n  // The index of the current selected item. When the selection is cleared a\n  // value of -1 is used.\n  selectionIndex: -1\n}; ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Menu\r\n *\r\n * The wrapper component for the other components. No DOM element is rendered.\r\n *\r\n * @see Docs https://reach.tech/menu-button#menu\r\n */\n\nvar Menu = function Menu(_ref) {\n  var id = _ref.id,\n      children = _ref.children;\n  var buttonRef = useRef(null);\n  var menuRef = useRef(null);\n  var popoverRef = useRef(null);\n\n  var _useDescendantsInit = useDescendantsInit(),\n      descendants = _useDescendantsInit[0],\n      setDescendants = _useDescendantsInit[1];\n\n  var _React$useReducer = useReducer(reducer, initialState),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var _id = useId(id);\n\n  var menuId = id || makeId(\"menu\", _id); // We use an event listener attached to the window to capture outside clicks\n  // that close the menu. We don't want the initial button click to trigger this\n  // when a menu is closed, so we can track this behavior in a ref for now.\n  // We shouldn't need this when we rewrite with state machine logic.\n\n  var buttonClickedRef = useRef(false); // We will put children callbacks in a ref to avoid triggering endless render\n  // loops when using render props if the app code doesn't useCallback\n  // https://github.com/reach/reach-ui/issues/523\n\n  var selectCallbacks = useRef([]); // If the popover's position overlaps with an option when the popover\n  // initially opens, the mouseup event will trigger a select. To prevent that,\n  // we decide the menu button is only ready to make a selection if the pointer\n  // moves first, otherwise the user is just registering the initial button\n  // click rather than selecting an item. This is similar to a native select\n  // on most platforms, and our menu button popover works similarly.\n\n  var readyToSelect = useRef(false);\n  var context = {\n    buttonRef: buttonRef,\n    dispatch: dispatch,\n    menuId: menuId,\n    menuRef: menuRef,\n    popoverRef: popoverRef,\n    buttonClickedRef: buttonClickedRef,\n    readyToSelect: readyToSelect,\n    selectCallbacks: selectCallbacks,\n    state: state\n  }; // When the menu is open, focus is placed on the menu itself so that\n  // keyboard navigation is still possible.\n\n  useEffect(function () {\n    if (state.isExpanded) {\n      // @ts-ignore\n      window.__REACH_DISABLE_TOOLTIPS = true;\n      window.requestAnimationFrame(function () {\n        focus(menuRef.current);\n      });\n    } else {\n      // We want to ignore the immediate focus of a tooltip so it doesn't pop\n      // up again when the menu closes, only pops up when focus returns again\n      // to the tooltip (like native OS tooltips).\n      // @ts-ignore\n      window.__REACH_DISABLE_TOOLTIPS = false;\n    }\n  }, [state.isExpanded]);\n  useCheckStyles(\"menu-button\");\n  return createElement(DescendantProvider, {\n    context: MenuDescendantContext,\n    items: descendants,\n    set: setDescendants\n  }, createElement(MenuContext.Provider, {\n    value: context\n  }, isFunction(children) ? children({\n    isExpanded: state.isExpanded,\n    // TODO: Remove in 1.0\n    isOpen: state.isExpanded\n  }) : children));\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  Menu.displayName = \"Menu\";\n  Menu.propTypes = {\n    children: /*#__PURE__*/PropTypes.oneOfType([PropTypes.func, PropTypes.node])\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * MenuButton\r\n *\r\n * Wraps a DOM `button` that toggles the opening and closing of the dropdown\r\n * menu. Must be rendered inside of a `<Menu>`.\r\n *\r\n * @see Docs https://reach.tech/menu-button#menubutton\r\n */\n\n\nvar MenuButton = /*#__PURE__*/forwardRefWithAs(function MenuButton(_ref2, forwardedRef) {\n  var _ref2$as = _ref2.as,\n      Comp = _ref2$as === void 0 ? \"button\" : _ref2$as,\n      onKeyDown = _ref2.onKeyDown,\n      onMouseDown = _ref2.onMouseDown,\n      id = _ref2.id,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"as\", \"onKeyDown\", \"onMouseDown\", \"id\"]);\n\n  var _React$useContext = useContext(MenuContext),\n      buttonRef = _React$useContext.buttonRef,\n      buttonClickedRef = _React$useContext.buttonClickedRef,\n      menuId = _React$useContext.menuId,\n      _React$useContext$sta = _React$useContext.state,\n      buttonId = _React$useContext$sta.buttonId,\n      isExpanded = _React$useContext$sta.isExpanded,\n      dispatch = _React$useContext.dispatch;\n\n  var ref = useForkedRef(buttonRef, forwardedRef);\n  var items = useDescendants(MenuDescendantContext);\n  var firstNonDisabledIndex = useMemo(function () {\n    return items.findIndex(function (item) {\n      return !item.disabled;\n    });\n  }, [items]);\n  useEffect(function () {\n    var newButtonId = id != null ? id : menuId ? makeId(\"menu-button\", menuId) : \"menu-button\";\n\n    if (buttonId !== newButtonId) {\n      dispatch({\n        type: SET_BUTTON_ID,\n        payload: newButtonId\n      });\n    }\n  }, [buttonId, dispatch, id, menuId]);\n\n  function handleKeyDown(event) {\n    switch (event.key) {\n      case \"ArrowDown\":\n      case \"ArrowUp\":\n        event.preventDefault(); // prevent scroll\n\n        dispatch({\n          type: OPEN_MENU_AT_INDEX,\n          payload: {\n            index: firstNonDisabledIndex\n          }\n        });\n        break;\n\n      case \"Enter\":\n      case \" \":\n        dispatch({\n          type: OPEN_MENU_AT_INDEX,\n          payload: {\n            index: firstNonDisabledIndex\n          }\n        });\n        break;\n    }\n  }\n\n  function handleMouseDown(event) {\n    if (!isExpanded) {\n      buttonClickedRef.current = true;\n    }\n\n    if (isRightClick(event.nativeEvent)) {\n      return;\n    } else if (isExpanded) {\n      dispatch({\n        type: CLOSE_MENU,\n        payload: {\n          buttonRef: buttonRef\n        }\n      });\n    } else {\n      dispatch({\n        type: OPEN_MENU_CLEARED\n      });\n    }\n  }\n\n  return createElement(Comp // When the menu is displayed, the element with role `button` has\n  // `aria-expanded` set to `true`. When the menu is hidden, it is\n  // recommended that `aria-expanded` is not present.\n  // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n  , Object.assign({\n    \"aria-expanded\": isExpanded ? true : undefined,\n    \"aria-haspopup\": true,\n    \"aria-controls\": menuId\n  }, props, {\n    ref: ref,\n    \"data-reach-menu-button\": \"\",\n    id: buttonId || undefined,\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\n    onMouseDown: wrapEvent(onMouseDown, handleMouseDown),\n    type: \"button\"\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  MenuButton.displayName = \"MenuButton\";\n  MenuButton.propTypes = {\n    children: PropTypes.node\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * MenuItemImpl\r\n *\r\n * MenuItem and MenuLink share most of the same functionality captured here.\r\n */\n\n\nvar MenuItemImpl = /*#__PURE__*/forwardRefWithAs(function MenuItemImpl(_ref3, forwardedRef) {\n  var Comp = _ref3.as,\n      indexProp = _ref3.index,\n      _ref3$isLink = _ref3.isLink,\n      isLink = _ref3$isLink === void 0 ? false : _ref3$isLink,\n      onClick = _ref3.onClick,\n      onDragStart = _ref3.onDragStart,\n      onMouseDown = _ref3.onMouseDown,\n      onMouseEnter = _ref3.onMouseEnter,\n      onMouseLeave = _ref3.onMouseLeave,\n      onMouseMove = _ref3.onMouseMove,\n      onMouseUp = _ref3.onMouseUp,\n      onSelect = _ref3.onSelect,\n      disabled = _ref3.disabled,\n      valueTextProp = _ref3.valueText,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"as\", \"index\", \"isLink\", \"onClick\", \"onDragStart\", \"onMouseDown\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseMove\", \"onMouseUp\", \"onSelect\", \"disabled\", \"valueText\"]);\n\n  var _React$useContext2 = useContext(MenuContext),\n      buttonRef = _React$useContext2.buttonRef,\n      dispatch = _React$useContext2.dispatch,\n      readyToSelect = _React$useContext2.readyToSelect,\n      selectCallbacks = _React$useContext2.selectCallbacks,\n      _React$useContext2$st = _React$useContext2.state,\n      selectionIndex = _React$useContext2$st.selectionIndex,\n      isExpanded = _React$useContext2$st.isExpanded;\n\n  var ownRef = useRef(null); // After the ref is mounted to the DOM node, we check to see if we have an\n  // explicit valueText prop before looking for the node's textContent for\n  // typeahead functionality.\n\n  var _React$useState = useState(valueTextProp || \"\"),\n      valueText = _React$useState[0],\n      setValueText = _React$useState[1];\n\n  var setValueTextFromDom = useCallback(function (node) {\n    if (node) {\n      ownRef.current = node;\n\n      if (!valueTextProp || node.textContent && valueText !== node.textContent) {\n        setValueText(node.textContent);\n      }\n    }\n  }, [valueText, valueTextProp]);\n  var ref = useForkedRef(forwardedRef, setValueTextFromDom);\n  var mouseEventStarted = useRef(false);\n  var index = useDescendant({\n    element: ownRef.current,\n    key: valueText,\n    disabled: disabled,\n    isLink: isLink\n  }, MenuDescendantContext, indexProp);\n  var isSelected = index === selectionIndex && !disabled; // Update the callback ref array on every render\n\n  selectCallbacks.current[index] = onSelect;\n\n  function select() {\n    focus(buttonRef.current);\n    onSelect && onSelect();\n    dispatch({\n      type: CLICK_MENU_ITEM\n    });\n  }\n\n  function handleClick(event) {\n    if (isLink && !isRightClick(event.nativeEvent)) {\n      if (disabled) {\n        event.preventDefault();\n      } else {\n        select();\n      }\n    }\n  }\n\n  function handleDragStart(event) {\n    // Because we don't preventDefault on mousedown for links (we need the\n    // native click event), clicking and holding on a link triggers a\n    // dragstart which we don't want.\n    if (isLink) {\n      event.preventDefault();\n    }\n  }\n\n  function handleMouseDown(event) {\n    if (isRightClick(event.nativeEvent)) return;\n\n    if (isLink) {\n      // Signal that the mouse is down so we can react call the right function\n      // if the user is clicking on a link.\n      mouseEventStarted.current = true;\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  function handleMouseEnter(event) {\n    if (!isSelected && index != null && !disabled) {\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: {\n          index: index\n        }\n      });\n    }\n  }\n\n  function handleMouseLeave(event) {\n    // Clear out selection when mouse over a non-menu item child.\n    dispatch({\n      type: CLEAR_SELECTION_INDEX\n    });\n  }\n\n  function handleMouseMove() {\n    readyToSelect.current = true;\n\n    if (!isSelected && index != null && !disabled) {\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: {\n          index: index\n        }\n      });\n    }\n  }\n\n  function handleMouseUp(event) {\n    if (!readyToSelect.current) {\n      readyToSelect.current = true;\n      return;\n    }\n\n    if (isRightClick(event.nativeEvent)) return;\n\n    if (isLink) {\n      // If a mousedown event was initiated on a menu link followed by a\n      // mouseup event on the same link, we do nothing; a click event will\n      // come next and handle selection. Otherwise, we trigger a click event.\n      if (mouseEventStarted.current) {\n        mouseEventStarted.current = false;\n      } else if (ownRef.current) {\n        ownRef.current.click();\n      }\n    } else {\n      if (!disabled) {\n        select();\n      }\n    }\n  } // When the menu closes, reset readyToSelect for the next interaction.\n\n\n  useEffect(function () {\n    if (!isExpanded) {\n      readyToSelect.current = false;\n    }\n  }, [isExpanded, readyToSelect]); // Any time a mouseup event occurs anywhere in the document, we reset the\n  // mouseEventStarted ref so we can check it again when needed.\n\n  useEffect(function () {\n    var ownerDocument = getOwnerDocument(ownRef.current);\n\n    var listener = function listener() {\n      return mouseEventStarted.current = false;\n    };\n\n    ownerDocument.addEventListener(\"mouseup\", listener);\n    return function () {\n      return ownerDocument.removeEventListener(\"mouseup\", listener);\n    };\n  }, []);\n  return createElement(Comp, Object.assign({\n    role: \"menuitem\",\n    id: useMenuItemId(index),\n    tabIndex: -1\n  }, props, {\n    ref: ref,\n    \"aria-disabled\": disabled || undefined,\n    \"data-reach-menu-item\": \"\",\n    \"data-selected\": isSelected ? \"\" : undefined,\n    \"data-valuetext\": valueText,\n    onClick: wrapEvent(onClick, handleClick),\n    onDragStart: wrapEvent(onDragStart, handleDragStart),\n    onMouseDown: wrapEvent(onMouseDown, handleMouseDown),\n    onMouseEnter: wrapEvent(onMouseEnter, handleMouseEnter),\n    onMouseLeave: wrapEvent(onMouseLeave, handleMouseLeave),\n    onMouseMove: wrapEvent(onMouseMove, handleMouseMove),\n    onMouseUp: wrapEvent(onMouseUp, handleMouseUp)\n  }));\n}); ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * MenuItem\r\n *\r\n * Handles menu selection. Must be a direct child of a `<MenuList>`.\r\n *\r\n * @see Docs https://reach.tech/menu-button#menuitem\r\n */\n\nvar MenuItem = /*#__PURE__*/forwardRefWithAs(function MenuItem(_ref4, forwardedRef) {\n  var _ref4$as = _ref4.as,\n      as = _ref4$as === void 0 ? \"div\" : _ref4$as,\n      props = _objectWithoutPropertiesLoose(_ref4, [\"as\"]);\n\n  return createElement(MenuItemImpl, Object.assign({}, props, {\n    ref: forwardedRef,\n    as: as\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  MenuItem.displayName = \"MenuItem\";\n  MenuItem.propTypes = {\n    as: PropTypes.any,\n    onSelect: PropTypes.func.isRequired\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * MenuItems\r\n *\r\n * A low-level wrapper for menu items. Compose it with `MenuPopover` for more\r\n * control over the nested components and their rendered DOM nodes, or if you\r\n * need to nest arbitrary components between the outer wrapper and your list.\r\n *\r\n * @see Docs https://reach.tech/menu-button#menuitems\r\n */\n\n\nvar MenuItems = /*#__PURE__*/forwardRefWithAs(function MenuItems(_ref5, forwardedRef) {\n  var _ref5$as = _ref5.as,\n      Comp = _ref5$as === void 0 ? \"div\" : _ref5$as,\n      children = _ref5.children,\n      id = _ref5.id,\n      onKeyDown = _ref5.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref5, [\"as\", \"children\", \"id\", \"onKeyDown\"]);\n\n  var _React$useContext3 = useContext(MenuContext),\n      menuId = _React$useContext3.menuId,\n      dispatch = _React$useContext3.dispatch,\n      buttonRef = _React$useContext3.buttonRef,\n      menuRef = _React$useContext3.menuRef,\n      selectCallbacks = _React$useContext3.selectCallbacks,\n      _React$useContext3$st = _React$useContext3.state,\n      isExpanded = _React$useContext3$st.isExpanded,\n      buttonId = _React$useContext3$st.buttonId,\n      selectionIndex = _React$useContext3$st.selectionIndex,\n      typeaheadQuery = _React$useContext3$st.typeaheadQuery;\n\n  var menuItems = useDescendants(MenuDescendantContext);\n  var ref = useForkedRef(menuRef, forwardedRef);\n  useEffect(function () {\n    // Respond to user char key input with typeahead\n    var match = findItemFromTypeahead(menuItems, typeaheadQuery);\n\n    if (typeaheadQuery && match != null) {\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: {\n          index: match\n        }\n      });\n    }\n\n    var timeout = window.setTimeout(function () {\n      return typeaheadQuery && dispatch({\n        type: SEARCH_FOR_ITEM,\n        payload: \"\"\n      });\n    }, 1000);\n    return function () {\n      return window.clearTimeout(timeout);\n    };\n  }, [dispatch, menuItems, typeaheadQuery]);\n  var prevMenuItemsLength = usePrevious(menuItems.length);\n  var prevSelected = usePrevious(menuItems[selectionIndex]);\n  var prevSelectionIndex = usePrevious(selectionIndex);\n  useEffect(function () {\n    if (selectionIndex > menuItems.length - 1) {\n      // If for some reason our selection index is larger than our possible\n      // index range (let's say the last item is selected and the list\n      // dynamically updates), we need to select the last item in the list.\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: {\n          index: menuItems.length - 1\n        }\n      });\n    } else if ( // Checks if\n    //  - menu length has changed\n    //  - selection index has not changed BUT selected item has changed\n    //\n    // This prevents any dynamic adding/removing of menu items from actually\n    // changing a user's expected selection.\n    prevMenuItemsLength !== menuItems.length && selectionIndex > -1 && prevSelected && prevSelectionIndex === selectionIndex && menuItems[selectionIndex] !== prevSelected) {\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: {\n          index: menuItems.findIndex(function (i) {\n            return i.key === prevSelected.key;\n          })\n        }\n      });\n    }\n  }, [dispatch, menuItems, prevMenuItemsLength, prevSelected, prevSelectionIndex, selectionIndex]);\n  var handleKeyDown = wrapEvent(function handleKeyDown(event) {\n    var key = event.key;\n\n    if (!isExpanded) {\n      return;\n    }\n\n    switch (key) {\n      case \"Enter\":\n      case \" \":\n        var selected = menuItems.find(function (item) {\n          return item.index === selectionIndex;\n        }); // For links, the Enter key will trigger a click by default, but for\n        // consistent behavior across menu items we'll trigger a click when\n        // the spacebar is pressed.\n\n        if (selected) {\n          if (selected.isLink && selected.element) {\n            selected.element.click();\n          } else {\n            event.preventDefault(); // Focus the button first by default when an item is selected.\n            // We fire the onSelect callback next so the app can manage\n            // focus if needed.\n\n            focus(buttonRef.current);\n            selectCallbacks.current[selected.index] && selectCallbacks.current[selected.index]();\n            dispatch({\n              type: CLICK_MENU_ITEM\n            });\n          }\n        }\n\n        break;\n\n      case \"Escape\":\n        focus(buttonRef.current);\n        dispatch({\n          type: CLOSE_MENU,\n          payload: {\n            buttonRef: buttonRef\n          }\n        });\n        break;\n\n      case \"Tab\":\n        // prevent leaving\n        event.preventDefault();\n        break;\n\n      default:\n        // Check if a user is typing some char keys and respond by setting\n        // the query state.\n        if (isString(key) && key.length === 1) {\n          var query = typeaheadQuery + key.toLowerCase();\n          dispatch({\n            type: SEARCH_FOR_ITEM,\n            payload: query\n          });\n        }\n\n        break;\n    }\n  }, useDescendantKeyDown(MenuDescendantContext, {\n    currentIndex: selectionIndex,\n    orientation: \"vertical\",\n    rotate: false,\n    filter: function filter(item) {\n      return !item.disabled;\n    },\n    callback: function callback(index) {\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: {\n          index: index\n        }\n      });\n    },\n    key: \"index\"\n  }));\n  return (// TODO: Should probably file a but in jsx-a11y, but this is correct\n    // according to https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n    // eslint-disable-next-line jsx-a11y/aria-activedescendant-has-tabindex\n    createElement(Comp // Refers to the descendant menuitem element that is visually indicated\n    // as focused.\n    // https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n    , Object.assign({\n      \"aria-activedescendant\": useMenuItemId(selectionIndex) || undefined,\n      \"aria-labelledby\": buttonId || undefined,\n      // The element that contains the menu items displayed by activating the\n      // button has role menu.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n      role: \"menu\",\n      tabIndex: -1\n    }, props, {\n      ref: ref,\n      \"data-reach-menu-items\": \"\",\n      id: menuId,\n      onKeyDown: wrapEvent(onKeyDown, handleKeyDown)\n    }), children)\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  MenuItems.displayName = \"MenuItems\";\n  MenuItems.propTypes = {\n    children: PropTypes.node\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * MenuLink\r\n *\r\n * Handles linking to a different page in the menu. By default it renders `<a>`,\r\n * but also accepts any other kind of Link as long as the `Link` uses the\r\n * `React.forwardRef` API.\r\n *\r\n * Must be a direct child of a `<MenuList>`.\r\n *\r\n * @see Docs https://reach.tech/menu-button#menulink\r\n */\n\n\nvar MenuLink = /*#__PURE__*/forwardRefWithAs(function MenuLink(_ref6, forwardedRef) {\n  var _ref6$as = _ref6.as,\n      as = _ref6$as === void 0 ? \"a\" : _ref6$as,\n      component = _ref6.component,\n      onSelect = _ref6.onSelect,\n      props = _objectWithoutPropertiesLoose(_ref6, [\"as\", \"component\", \"onSelect\"]);\n\n  if (component) {\n    console.warn(\"[@reach/menu-button]: Please use the `as` prop instead of `component`.\");\n  }\n\n  return createElement(\"div\", {\n    role: \"none\",\n    tabIndex: -1\n  }, createElement(MenuItemImpl, Object.assign({}, props, {\n    ref: forwardedRef,\n    \"data-reach-menu-link\": \"\",\n    as: as,\n    isLink: true,\n    onSelect: onSelect || noop\n  })));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  MenuLink.displayName = \"MenuLink\";\n  MenuLink.propTypes = {\n    as: PropTypes.any,\n    component: PropTypes.any\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * MenuList\r\n *\r\n * Wraps a DOM element that renders the menu items. Must be rendered inside of\r\n * a `<Menu>`.\r\n *\r\n * @see Docs https://reach.tech/menu-button#menulist\r\n */\n\n\nvar MenuList = /*#__PURE__*/forwardRefWithAs(function MenuList(_ref7, forwardedRef) {\n  var _ref7$portal = _ref7.portal,\n      portal = _ref7$portal === void 0 ? true : _ref7$portal,\n      props = _objectWithoutPropertiesLoose(_ref7, [\"portal\"]);\n\n  return createElement(MenuPopover, {\n    portal: portal\n  }, createElement(MenuItems, Object.assign({}, props, {\n    ref: forwardedRef,\n    \"data-reach-menu-list\": \"\"\n  })));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  MenuList.displayName = \"MenuList\";\n  MenuList.propTypes = {\n    children: PropTypes.node.isRequired\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * MenuPopover\r\n *\r\n * A low-level wrapper for the popover that appears when a menu button is open.\r\n * You can compose it with `MenuItems` for more control over the nested\r\n * components and their rendered DOM nodes, or if you need to nest arbitrary\r\n * components between the outer wrapper and your list.\r\n *\r\n * @see Docs https://reach.tech/menu-button#menupopover\r\n */\n\n\nvar MenuPopover = /*#__PURE__*/forwardRefWithAs(function MenuPopover(_ref8, forwardedRef) {\n  var _ref8$as = _ref8.as,\n      Comp = _ref8$as === void 0 ? \"div\" : _ref8$as,\n      children = _ref8.children,\n      _ref8$portal = _ref8.portal,\n      portal = _ref8$portal === void 0 ? true : _ref8$portal,\n      position = _ref8.position,\n      props = _objectWithoutPropertiesLoose(_ref8, [\"as\", \"children\", \"portal\", \"position\"]);\n\n  var _React$useContext4 = useContext(MenuContext),\n      buttonRef = _React$useContext4.buttonRef,\n      buttonClickedRef = _React$useContext4.buttonClickedRef,\n      dispatch = _React$useContext4.dispatch,\n      menuRef = _React$useContext4.menuRef,\n      popoverRef = _React$useContext4.popoverRef,\n      isExpanded = _React$useContext4.state.isExpanded;\n\n  var ref = useForkedRef(popoverRef, forwardedRef);\n  useEffect(function () {\n    var ownerDocument = getOwnerDocument(popoverRef.current);\n\n    function listener(event) {\n      if (buttonClickedRef.current) {\n        buttonClickedRef.current = false;\n      } else if (!popoverContainsEventTarget(popoverRef.current, event.target)) {\n        // We on want to close only if focus rests outside the menu\n        dispatch({\n          type: CLOSE_MENU,\n          payload: {\n            buttonRef: buttonRef\n          }\n        });\n      }\n    }\n\n    ownerDocument.addEventListener(\"mousedown\", listener); // see https://github.com/reach/reach-ui/pull/700#discussion_r530369265\n    // ownerDocument.addEventListener(\"touchstart\", listener);\n\n    return function () {\n      ownerDocument.removeEventListener(\"mousedown\", listener); // ownerDocument.removeEventListener(\"touchstart\", listener);\n    };\n  }, [buttonClickedRef, buttonRef, dispatch, menuRef, popoverRef]);\n\n  var commonProps = _extends({\n    ref: ref,\n    // TODO: remove in 1.0\n    \"data-reach-menu\": \"\",\n    \"data-reach-menu-popover\": \"\",\n    hidden: !isExpanded,\n    children: children\n  }, props);\n\n  return portal ? createElement(Popover, Object.assign({}, commonProps, {\n    as: Comp,\n    targetRef: buttonRef,\n    position: position\n  })) : createElement(Comp, Object.assign({}, commonProps));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  MenuPopover.displayName = \"MenuPopover\";\n  MenuPopover.propTypes = {\n    children: PropTypes.node\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * A hook that exposes data for a given `Menu` component to its descendants.\r\n *\r\n * @see Docs https://reach.tech/menu-button#usemenubuttoncontext\r\n */\n\n\nfunction useMenuButtonContext() {\n  var _React$useContext5 = useContext(MenuContext),\n      isExpanded = _React$useContext5.state.isExpanded;\n\n  return useMemo(function () {\n    return {\n      isExpanded: isExpanded\n    };\n  }, [isExpanded]);\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * When a user's typed input matches the string displayed in a menu item, it is\r\n * expected that the matching menu item is selected. This is our matching\r\n * function.\r\n */\n\n\nfunction findItemFromTypeahead(items, string) {\n  if (string === void 0) {\n    string = \"\";\n  }\n\n  if (!string) {\n    return null;\n  }\n\n  var found = items.find(function (item) {\n    var _item$element, _item$element$dataset, _item$element$dataset2;\n\n    return item.disabled ? false : (_item$element = item.element) === null || _item$element === void 0 ? void 0 : (_item$element$dataset = _item$element.dataset) === null || _item$element$dataset === void 0 ? void 0 : (_item$element$dataset2 = _item$element$dataset.valuetext) === null || _item$element$dataset2 === void 0 ? void 0 : _item$element$dataset2.toLowerCase().startsWith(string);\n  });\n  return found ? items.indexOf(found) : null;\n}\n\nfunction useMenuItemId(index) {\n  var _React$useContext6 = useContext(MenuContext),\n      menuId = _React$useContext6.menuId;\n\n  return index != null && index > -1 ? makeId(\"option-\" + index, menuId) : undefined;\n}\n\nfunction isRightClick(nativeEvent) {\n  return nativeEvent.which === 3 || nativeEvent.button === 2;\n}\n\nfunction focus(element) {\n  element && element.focus();\n}\n\nfunction popoverContainsEventTarget(popover, target) {\n  return !!(popover && popover.contains(target));\n}\n\nfunction reducer(state, action) {\n  if (action === void 0) {\n    action = {};\n  }\n\n  switch (action.type) {\n    case CLICK_MENU_ITEM:\n      return _extends({}, state, {\n        isExpanded: false,\n        selectionIndex: -1\n      });\n\n    case CLOSE_MENU:\n      return _extends({}, state, {\n        isExpanded: false,\n        selectionIndex: -1\n      });\n\n    case OPEN_MENU_AT_FIRST_ITEM:\n      return _extends({}, state, {\n        isExpanded: true,\n        selectionIndex: 0\n      });\n\n    case OPEN_MENU_AT_INDEX:\n      return _extends({}, state, {\n        isExpanded: true,\n        selectionIndex: action.payload.index\n      });\n\n    case OPEN_MENU_CLEARED:\n      return _extends({}, state, {\n        isExpanded: true,\n        selectionIndex: -1\n      });\n\n    case SELECT_ITEM_AT_INDEX:\n      if (action.payload.index >= 0) {\n        return _extends({}, state, {\n          selectionIndex: action.payload.max != null ? Math.min(Math.max(action.payload.index, 0), action.payload.max) : Math.max(action.payload.index, 0)\n        });\n      }\n\n      return state;\n\n    case CLEAR_SELECTION_INDEX:\n      return _extends({}, state, {\n        selectionIndex: -1\n      });\n\n    case SET_BUTTON_ID:\n      return _extends({}, state, {\n        buttonId: action.payload\n      });\n\n    case SEARCH_FOR_ITEM:\n      if (typeof action.payload !== \"undefined\") {\n        return _extends({}, state, {\n          typeaheadQuery: action.payload\n        });\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport { Menu, MenuButton, MenuItem, MenuItems, MenuLink, MenuList, MenuPopover, useMenuButtonContext };","map":{"version":3,"sources":["../src/index.tsx"],"names":["CLEAR_SELECTION_INDEX","CLICK_MENU_ITEM","CLOSE_MENU","OPEN_MENU_AT_FIRST_ITEM","OPEN_MENU_AT_INDEX","OPEN_MENU_CLEARED","SEARCH_FOR_ITEM","SELECT_ITEM_AT_INDEX","SET_BUTTON_ID","MenuDescendantContext","createDescendantContext","MenuContext","createNamedContext","initialState","buttonId","isExpanded","typeaheadQuery","selectionIndex","Menu","id","children","buttonRef","React","menuRef","popoverRef","descendants","setDescendants","useDescendantsInit","state","dispatch","_id","useId","menuId","makeId","buttonClickedRef","selectCallbacks","readyToSelect","context","window","focus","useCheckStyles","items","set","value","isOpen","PropTypes","MenuButton","forwardRefWithAs","as","Comp","onKeyDown","onMouseDown","props","ref","useForkedRef","useDescendants","firstNonDisabledIndex","item","newButtonId","type","payload","event","index","isRightClick","undefined","wrapEvent","node","MenuItemImpl","indexProp","isLink","onClick","onDragStart","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","onSelect","disabled","valueText","valueTextProp","ownRef","setValueText","setValueTextFromDom","mouseEventStarted","useDescendant","element","key","isSelected","select","ownerDocument","getOwnerDocument","listener","role","useMenuItemId","tabIndex","MenuItem","forwardedRef","isRequired","MenuItems","menuItems","match","findItemFromTypeahead","timeout","prevMenuItemsLength","usePrevious","prevSelected","prevSelectionIndex","i","handleKeyDown","selected","isString","query","useDescendantKeyDown","currentIndex","orientation","rotate","filter","callback","MenuLink","component","console","noop","any","MenuList","portal","MenuPopover","position","popoverContainsEventTarget","commonProps","hidden","targetRef","string","found","nativeEvent","popover","action","Math"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0CA;;;AAEA,IAAMA,qBAAqB,GAA3B,uBAAA;AACA,IAAMC,eAAe,GAArB,iBAAA;AACA,IAAMC,UAAU,GAAhB,YAAA;AACA,IAAMC,uBAAuB,GAA7B,yBAAA;AACA,IAAMC,kBAAkB,GAAxB,oBAAA;AACA,IAAMC,iBAAiB,GAAvB,mBAAA;AACA,IAAMC,eAAe,GAArB,iBAAA;AACA,IAAMC,oBAAoB,GAA1B,sBAAA;AACA,IAAMC,aAAa,GAAnB,eAAA;AAEA,IAAMC,qBAAqB,GAAA,aAAGC,uBAAuB,CAArD,uBAAqD,CAArD;AAGA,IAAMC,WAAW,GAAA,aAAGC,kBAAkB,CAAA,aAAA,EAAtC,EAAsC,CAAtC;AAKA,IAAMC,YAAY,GAAoB;AACpC;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAL4B,IAAA;AAOpC;AACAC,EAAAA,UAAU,EAR0B,KAAA;AAUpC;AACA;AACAC,EAAAA,cAAc,EAZsB,EAAA;AAcpC;AACA;AACAC,EAAAA,cAAc,EAAE,CAAC;AAhBmB,CAAtC,C,CAAA;;AAqBA;;;;;;;;IAOMC,IAAI,GAAwB,SAA5BA,IAA4B,CAAA,IAAA,EAAA;MAAGC,EAAAA,GAAAA,IAAAA,CAAAA,E;MAAIC,QAAAA,GAAAA,IAAAA,CAAAA,Q;AACvC,MAAIC,SAAS,GAAGC,MAAAA,CAAhB,IAAgBA,CAAhB;AACA,MAAIC,OAAO,GAAGD,MAAAA,CAAd,IAAcA,CAAd;AACA,MAAIE,UAAU,GAAGF,MAAAA,CAAjB,IAAiBA,CAAjB;;4BACoCK,kBAAkB,E;MAAjDF,WAAAA,GAAAA,mBAAAA,CAAAA,CAAAA,C;MAAaC,cAAAA,GAAAA,mBAAAA,CAAAA,CAAAA,C;;0BAGMJ,UAAAA,CAAAA,OAAAA,EAAAA,YAAAA,C;MAAnBM,KAAAA,GAAAA,iBAAAA,CAAAA,CAAAA,C;MAAOC,QAAAA,GAAAA,iBAAAA,CAAAA,CAAAA,C;;AACZ,MAAIC,GAAG,GAAGC,KAAK,CAAf,EAAe,CAAf;;AACA,MAAIC,MAAM,GAAGb,EAAE,IAAIc,MAAM,CAAA,MAAA,EAAzB,GAAyB,CAAzB,CATgC,CAShC;AAGA;AACA;AACA;;AACA,MAAIC,gBAAgB,GAAGZ,MAAAA,CAAvB,KAAuBA,CAAvB,CAfgC,CAehC;AAGA;AACA;;AACA,MAAIa,eAAe,GAAGb,MAAAA,CAAtB,EAAsBA,CAAtB,CApBgC,CAoBhC;AAGA;AACA;AACA;AACA;AACA;;AACA,MAAIc,aAAa,GAAGd,MAAAA,CAApB,KAAoBA,CAApB;AAEA,MAAIe,OAAO,GAA6B;AACtChB,IAAAA,SAAS,EAD6B,SAAA;AAEtCQ,IAAAA,QAAQ,EAF8B,QAAA;AAGtCG,IAAAA,MAAM,EAHgC,MAAA;AAItCT,IAAAA,OAAO,EAJ+B,OAAA;AAKtCC,IAAAA,UAAU,EAL4B,UAAA;AAMtCU,IAAAA,gBAAgB,EANsB,gBAAA;AAOtCE,IAAAA,aAAa,EAPyB,aAAA;AAQtCD,IAAAA,eAAe,EARuB,eAAA;AAStCP,IAAAA,KAAK,EAALA;AATsC,GAAxC,CA9BgC,CA8BhC;AAaA;;AACAN,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAIM,KAAK,CAAT,UAAA,EAAsB;AACpB;AACAU,MAAAA,MAAM,CAANA,wBAAAA,GAAAA,IAAAA;AACAA,MAAAA,MAAM,CAANA,qBAAAA,CAA6B,YAAA;AAC3BC,QAAAA,KAAK,CAAChB,OAAO,CAAbgB,OAAK,CAALA;AADFD,OAAAA;AAHF,KAAA,MAMO;AACL;AACA;AACA;AACA;AACAA,MAAAA,MAAM,CAANA,wBAAAA,GAAAA,KAAAA;AACD;AAbHhB,GAAAA,EAcG,CAACM,KAAK,CAdTN,UAcG,CAdHA,CAAAA;AAgBAkB,EAAAA,cAAc,CAAdA,aAAc,CAAdA;AAEA,SACE,aAAA,CAAA,kBAAA,EAAA;AACEH,IAAAA,OAAO,EAAE5B,qBADX;AAEEgC,IAAAA,KAAK,EAAEhB,WAFT;AAGEiB,IAAAA,GAAG,EAAEhB;AAHP,GAAA,EAKE,aAAA,CAACf,WAAW,CAAZ,QAAA,EAAA;AAAsBgC,IAAAA,KAAK,EAAEN;AAA7B,GAAA,EACG,UAAU,CAAV,QAAU,CAAV,GACGjB,QAAQ,CAAC;AACPL,IAAAA,UAAU,EAAEa,KAAK,CADV,UAAA;AAEP;AACAgB,IAAAA,MAAM,EAAEhB,KAAK,CAACb;AAHP,GAAD,CADX,GAPP,QAMI,CALF,CADF;AAiBD,C;;AAsBD,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACXG,EAAAA,IAAI,CAAJA,WAAAA,GAAAA,MAAAA;AACAA,EAAAA,IAAI,CAAJA,SAAAA,GAAiB;AACfE,IAAAA,QAAQ,EAAA,aAAEyB,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,IAAA,EAAiBA,SAAS,CAA9CA,IAAoB,CAApBA;AADK,GAAjB3B;AAGD,C,CAAA;;AAID;;;;;;;;;;IAQM4B,UAAU,GAAA,aAAGC,gBAAgB,CACjC,SAAA,UAAA,CAAA,KAAA,EAAA,YAAA,EAAA;uBACIC,E;MAAIC,IAAAA,GAAAA,QAAAA,KAAAA,KAAAA,CAAAA,GAAO,QAAPA,GAAO,Q;MAAUC,SAAAA,GAAAA,KAAAA,CAAAA,S;MAAWC,WAAAA,GAAAA,KAAAA,CAAAA,W;MAAahC,EAAAA,GAAAA,KAAAA,CAAAA,E;MAAOiC,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,IAAAA,CAAAA,C;;0BASlD9B,UAAAA,CAAAA,WAAAA,C;MALFD,SAAAA,GAAAA,iBAAAA,CAAAA,S;MACAa,gBAAAA,GAAAA,iBAAAA,CAAAA,gB;MACAF,MAAAA,GAAAA,iBAAAA,CAAAA,M;gDACAJ,K;MAASd,QAAAA,GAAAA,qBAAAA,CAAAA,Q;MAAUC,UAAAA,GAAAA,qBAAAA,CAAAA,U;MACnBc,QAAAA,GAAAA,iBAAAA,CAAAA,Q;;AAEF,MAAIwB,GAAG,GAAGC,YAAY,CAAA,SAAA,EAAtB,YAAsB,CAAtB;AACA,MAAIb,KAAK,GAAGc,cAAc,CAA1B,qBAA0B,CAA1B;AACA,MAAIC,qBAAqB,GAAG,OAAA,CAC1B,YAAA;AAAA,WAAM,KAAK,CAAL,SAAA,CAAgB,UAAA,IAAA,EAAA;AAAA,aAAU,CAACC,IAAI,CAAf,QAAA;AAAtB,KAAM,CAAN;AAD0B,GAAA,EAE1B,CAFF,KAEE,CAF0B,CAA5B;AAIAnC,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAIoC,WAAW,GACbvC,EAAE,IAAFA,IAAAA,GAAAA,EAAAA,GAEIa,MAAM,GACNC,MAAM,CAAA,aAAA,EADA,MACA,CADA,GAHZ,aAAA;;AAMA,QAAInB,QAAQ,KAAZ,WAAA,EAA8B;AAC5Be,MAAAA,QAAQ,CAAC;AACP8B,QAAAA,IAAI,EADG,aAAA;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR7B;AAID;AAZHP,GAAAA,EAaG,CAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAbHA,MAaG,CAbHA,CAAAA;;AAeA,WAAA,aAAA,CAAA,KAAA,EAAA;AACE,YAAQuC,KAAK,CAAb,GAAA;AACE,WAAA,WAAA;AACA,WAAA,SAAA;AACEA,QAAAA,KAAK,CADP,cACEA,GADF,CAAA;;AAEEhC,QAAAA,QAAQ,CAAC;AACP8B,UAAAA,IAAI,EADG,kBAAA;AAEPC,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEN;AAAT;AAFF,SAAD,CAAR3B;AAIA;;AACF,WAAA,OAAA;AACA,WAAA,GAAA;AACEA,QAAAA,QAAQ,CAAC;AACP8B,UAAAA,IAAI,EADG,kBAAA;AAEPC,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEN;AAAT;AAFF,SAAD,CAAR3B;AAIA;AAfJ;AAmBD;;AAED,WAAA,eAAA,CAAA,KAAA,EAAA;AACE,QAAI,CAAJ,UAAA,EAAiB;AACfK,MAAAA,gBAAgB,CAAhBA,OAAAA,GAAAA,IAAAA;AACD;;AACD,QAAI6B,YAAY,CAACF,KAAK,CAAtB,WAAgB,CAAhB,EAAqC;AACnC;AADF,KAAA,MAEO,IAAA,UAAA,EAAgB;AACrBhC,MAAAA,QAAQ,CAAC;AAAE8B,QAAAA,IAAI,EAAN,UAAA;AAAoBC,QAAAA,OAAO,EAAE;AAAEvC,UAAAA,SAAS,EAATA;AAAF;AAA7B,OAAD,CAARQ;AADK,KAAA,MAEA;AACLA,MAAAA,QAAQ,CAAC;AAAE8B,QAAAA,IAAI,EAAEtD;AAAR,OAAD,CAARwB;AACD;AACF;;AAED,SACE,aAAA,CAAA,IAAA,CAAA;AAEE;AACA;AACA;AAJF,IAAA,MAAA,CAAA,MAAA,CAAA;qBAKiBd,UAAU,GAAA,IAAA,GAAUiD,SALrC;yBAAA;qBAaiBhC;AAbjB,GAAA,EAcMoB,KAdN,EAcMA;AACJC,IAAAA,GAAG,EAAEA,GADDD;8BAEmB,EAFnBA;AAGJjC,IAAAA,EAAE,EAAEL,QAAQ,IAAIkD,SAHZZ;AAIJF,IAAAA,SAAS,EAAEe,SAAS,CAAA,SAAA,EAAA,aAAA,CAJhBb;AAKJD,IAAAA,WAAW,EAAEc,SAAS,CAAA,WAAA,EAAA,eAAA,CALlBb;AAMJO,IAAAA,IAAI,EAAC;AANDP,GAdN,CAAA,CADF;AApE+B,CAAA,C;;AA2GnC,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACXN,EAAAA,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AACAA,EAAAA,UAAU,CAAVA,SAAAA,GAAuB;AACrB1B,IAAAA,QAAQ,EAAEyB,SAAS,CAACqB;AADC,GAAvBpB;AAGD,C,CAAA;;AAID;;;;;;;AAKA,IAAMqB,YAAY,GAAA,aAAGpB,gBAAgB,CACnC,SAAA,YAAA,CAAA,KAAA,EAAA,YAAA,EAAA;MAEQE,IAAAA,GAAAA,KAAAA,CAAJD,E;MACOoB,SAAAA,GAAAA,KAAAA,CAAPN,K;2BACAO,M;MAAAA,MAAAA,GAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAS,KAATA,GAAS,Y;MACTC,OAAAA,GAAAA,KAAAA,CAAAA,O;MACAC,WAAAA,GAAAA,KAAAA,CAAAA,W;MACApB,WAAAA,GAAAA,KAAAA,CAAAA,W;MACAqB,YAAAA,GAAAA,KAAAA,CAAAA,Y;MACAC,YAAAA,GAAAA,KAAAA,CAAAA,Y;MACAC,WAAAA,GAAAA,KAAAA,CAAAA,W;MACAC,SAAAA,GAAAA,KAAAA,CAAAA,S;MACAC,QAAAA,GAAAA,KAAAA,CAAAA,Q;MACAC,QAAAA,GAAAA,KAAAA,CAAAA,Q;MACWE,aAAAA,GAAAA,KAAAA,CAAXD,S;MACG1B,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAAAA,aAAAA,EAAAA,aAAAA,EAAAA,cAAAA,EAAAA,cAAAA,EAAAA,aAAAA,EAAAA,WAAAA,EAAAA,UAAAA,EAAAA,UAAAA,EAAAA,WAAAA,CAAAA,C;;2BAUD9B,UAAAA,CAAAA,WAAAA,C;MALFD,SAAAA,GAAAA,kBAAAA,CAAAA,S;MACAQ,QAAAA,GAAAA,kBAAAA,CAAAA,Q;MACAO,aAAAA,GAAAA,kBAAAA,CAAAA,a;MACAD,eAAAA,GAAAA,kBAAAA,CAAAA,e;iDACAP,K;MAASX,cAAAA,GAAAA,qBAAAA,CAAAA,c;MAAgBF,UAAAA,GAAAA,qBAAAA,CAAAA,U;;AAE3B,MAAIiE,MAAM,GAAG1D,MAAAA,CAAb,IAAaA,CAAb,CA1BF,CA0BE;AAEA;AACA;;wBACgCA,QAAAA,CAAeyD,aAAa,IAA5BzD,EAAAA,C;MAA3BwD,SAAAA,GAAAA,eAAAA,CAAAA,CAAAA,C;MAAWG,YAAAA,GAAAA,eAAAA,CAAAA,CAAAA,C;;AAChB,MAAIC,mBAAmB,GAAG,WAAA,CACxB,UAAA,IAAA,EAAA;AACE,QAAA,IAAA,EAAU;AACRF,MAAAA,MAAM,CAANA,OAAAA,GAAAA,IAAAA;;AACA,UACE,CAAA,aAAA,IACCd,IAAI,CAAJA,WAAAA,IAAoBY,SAAS,KAAKZ,IAAI,CAFzC,WAAA,EAGE;AACAe,QAAAA,YAAY,CAACf,IAAI,CAAjBe,WAAY,CAAZA;AACD;AACF;AAVqB,GAAA,EAYxB,CAAA,SAAA,EAZF,aAYE,CAZwB,CAA1B;AAeA,MAAI5B,GAAG,GAAGC,YAAY,CAAA,YAAA,EAAtB,mBAAsB,CAAtB;AAEA,MAAI6B,iBAAiB,GAAG7D,MAAAA,CAAxB,KAAwBA,CAAxB;AAEA,MAAIwC,KAAK,GAAGsB,aAAa,CACvB;AACEC,IAAAA,OAAO,EAAEL,MAAM,CADjB,OAAA;AAEEM,IAAAA,GAAG,EAFL,SAAA;AAGET,IAAAA,QAAQ,EAHV,QAAA;AAIER,IAAAA,MAAM,EAANA;AAJF,GADuB,EAAA,qBAAA,EAAzB,SAAyB,CAAzB;AAUA,MAAIkB,UAAU,GAAGzB,KAAK,KAALA,cAAAA,IAA4B,CAA7C,QAAA,CA5DF,CA4DE;;AAGA3B,EAAAA,eAAe,CAAfA,OAAAA,CAAAA,KAAAA,IAAAA,QAAAA;;AAEA,WAAA,MAAA,GAAA;AACEI,IAAAA,KAAK,CAAClB,SAAS,CAAfkB,OAAK,CAALA;AACAqC,IAAAA,QAAQ,IAAIA,QAAZA,EAAAA;AACA/C,IAAAA,QAAQ,CAAC;AAAE8B,MAAAA,IAAI,EAAE1D;AAAR,KAAD,CAAR4B;AACD;;AAED,WAAA,WAAA,CAAA,KAAA,EAAA;AACE,QAAIwC,MAAM,IAAI,CAACN,YAAY,CAACF,KAAK,CAAjC,WAA2B,CAA3B,EAAgD;AAC9C,UAAA,QAAA,EAAc;AACZA,QAAAA,KAAK,CAALA,cAAAA;AADF,OAAA,MAEO;AACL2B,QAAAA,MAAM;AACP;AACF;AACF;;AAED,WAAA,eAAA,CAAA,KAAA,EAAA;AACE;AACA;AACA;AACA,QAAA,MAAA,EAAY;AACV3B,MAAAA,KAAK,CAALA,cAAAA;AACD;AACF;;AAED,WAAA,eAAA,CAAA,KAAA,EAAA;AACE,QAAIE,YAAY,CAACF,KAAK,CAAtB,WAAgB,CAAhB,EAAqC;;AAErC,QAAA,MAAA,EAAY;AACV;AACA;AACAsB,MAAAA,iBAAiB,CAAjBA,OAAAA,GAAAA,IAAAA;AAHF,KAAA,MAIO;AACLtB,MAAAA,KAAK,CAALA,cAAAA;AACD;AACF;;AAED,WAAA,gBAAA,CAAA,KAAA,EAAA;AACE,QAAI,CAAA,UAAA,IAAeC,KAAK,IAApB,IAAA,IAAgC,CAApC,QAAA,EAA+C;AAC7CjC,MAAAA,QAAQ,CAAC;AAAE8B,QAAAA,IAAI,EAAN,oBAAA;AAA8BC,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAAvC,OAAD,CAARjC;AACD;AACF;;AAED,WAAA,gBAAA,CAAA,KAAA,EAAA;AACE;AACAA,IAAAA,QAAQ,CAAC;AAAE8B,MAAAA,IAAI,EAAE3D;AAAR,KAAD,CAAR6B;AACD;;AAED,WAAA,eAAA,GAAA;AACEO,IAAAA,aAAa,CAAbA,OAAAA,GAAAA,IAAAA;;AACA,QAAI,CAAA,UAAA,IAAe0B,KAAK,IAApB,IAAA,IAAgC,CAApC,QAAA,EAA+C;AAC7CjC,MAAAA,QAAQ,CAAC;AAAE8B,QAAAA,IAAI,EAAN,oBAAA;AAA8BC,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAAvC,OAAD,CAARjC;AACD;AACF;;AAED,WAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAI,CAACO,aAAa,CAAlB,OAAA,EAA4B;AAC1BA,MAAAA,aAAa,CAAbA,OAAAA,GAAAA,IAAAA;AACA;AACD;;AACD,QAAI2B,YAAY,CAACF,KAAK,CAAtB,WAAgB,CAAhB,EAAqC;;AAErC,QAAA,MAAA,EAAY;AACV;AACA;AACA;AACA,UAAIsB,iBAAiB,CAArB,OAAA,EAA+B;AAC7BA,QAAAA,iBAAiB,CAAjBA,OAAAA,GAAAA,KAAAA;AADF,OAAA,MAEO,IAAIH,MAAM,CAAV,OAAA,EAAoB;AACzBA,QAAAA,MAAM,CAANA,OAAAA,CAAAA,KAAAA;AACD;AARH,KAAA,MASO;AACL,UAAI,CAAJ,QAAA,EAAe;AACbQ,QAAAA,MAAM;AACP;AACF;AACF,GA7IH,CA6IG;;;AAGDlE,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAI,CAAJ,UAAA,EAAiB;AACfc,MAAAA,aAAa,CAAbA,OAAAA,GAAAA,KAAAA;AACD;AAHHd,GAAAA,EAIG,CAAA,UAAA,EAJHA,aAIG,CAJHA,CAAAA,CAhJF,CAgJEA;AAOA;;AACAA,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAImE,aAAa,GAAGC,gBAAgB,CAACV,MAAM,CAA3C,OAAoC,CAApC;;AACA,QAAIW,QAAQ,GAAG,SAAXA,QAAW,GAAA;AAAA,aAAOR,iBAAiB,CAAjBA,OAAAA,GAAP,KAAA;AAAf,KAAA;;AACAM,IAAAA,aAAa,CAAbA,gBAAAA,CAAAA,SAAAA,EAAAA,QAAAA;AACA,WAAO,YAAA;AAAA,aAAMA,aAAa,CAAbA,mBAAAA,CAAAA,SAAAA,EAAN,QAAMA,CAAN;AAAP,KAAA;AAJFnE,GAAAA,EAAAA,EAAAA,CAAAA;AAOA,SACE,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACEsE,IAAAA,IAAI,EAAC,UADP;AAEEzE,IAAAA,EAAE,EAAE0E,aAAa,CAAA,KAAA,CAFnB;AAGEC,IAAAA,QAAQ,EAAE,CAAC;AAHb,GAAA,EAIM1C,KAJN,EAIMA;AACJC,IAAAA,GAAG,EAAEA,GADDD;qBAEWyB,QAAQ,IAAIb,SAFvBZ;4BAGiB,EAHjBA;qBAIWmC,UAAU,GAAA,EAAA,GAAQvB,SAJ7BZ;sBAKY0B,SALZ1B;AAMJkB,IAAAA,OAAO,EAAEL,SAAS,CAAA,OAAA,EAAA,WAAA,CANdb;AAOJmB,IAAAA,WAAW,EAAEN,SAAS,CAAA,WAAA,EAAA,eAAA,CAPlBb;AAQJD,IAAAA,WAAW,EAAEc,SAAS,CAAA,WAAA,EAAA,eAAA,CARlBb;AASJoB,IAAAA,YAAY,EAAEP,SAAS,CAAA,YAAA,EAAA,gBAAA,CATnBb;AAUJqB,IAAAA,YAAY,EAAER,SAAS,CAAA,YAAA,EAAA,gBAAA,CAVnBb;AAWJsB,IAAAA,WAAW,EAAET,SAAS,CAAA,WAAA,EAAA,eAAA,CAXlBb;AAYJuB,IAAAA,SAAS,EAAEV,SAAS,CAAA,SAAA,EAAA,aAAA;AAZhBb,GAJN,CAAA,CADF;AAhKJ,CAAqC,CAArC,C,CAAA;;AAiNA;;;;;;;;IAOM2C,QAAQ,GAAA,aAAGhD,gBAAgB,CAAuB,SAAA,QAAA,CAAA,KAAA,EAAA,YAAA,EAAA;uBACpDC,E;MAAAA,EAAAA,GAAAA,QAAAA,KAAAA,KAAAA,CAAAA,GAAK,KAALA,GAAK,Q;MAAUI,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,IAAAA,CAAAA,C;;AAGjB,SAAO,aAAA,CAAA,YAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAkBA,KAAlB,EAAkBA;AAAOC,IAAAA,GAAG,EAAE2C,YAAZ5C;AAA0BJ,IAAAA,EAAE,EAAEA;AAA9BI,GAAlB,CAAA,CAAP;AAJ+B,CAAA,C;;AAYjC,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACX2C,EAAAA,QAAQ,CAARA,WAAAA,GAAAA,UAAAA;AACAA,EAAAA,QAAQ,CAARA,SAAAA,GAAqB;AACnB/C,IAAAA,EAAE,EAAEH,SAAS,CADM,GAAA;AAEnB+B,IAAAA,QAAQ,EAAE/B,SAAS,CAATA,IAAAA,CAAeoD;AAFN,GAArBF;AAID,C,CAAA;;AAID;;;;;;;;;;;IASMG,SAAS,GAAA,aAAGnD,gBAAgB,CAAwB,SAAA,SAAA,CAAA,KAAA,EAAA,YAAA,EAAA;uBACtDC,E;MAAIC,IAAAA,GAAAA,QAAAA,KAAAA,KAAAA,CAAAA,GAAO,KAAPA,GAAO,Q;MAAO7B,QAAAA,GAAAA,KAAAA,CAAAA,Q;MAAUD,EAAAA,GAAAA,KAAAA,CAAAA,E;MAAI+B,SAAAA,GAAAA,KAAAA,CAAAA,S;MAAcE,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,IAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,WAAAA,CAAAA,C;;2BAU5C9B,UAAAA,CAAAA,WAAAA,C;MANFU,MAAAA,GAAAA,kBAAAA,CAAAA,M;MACAH,QAAAA,GAAAA,kBAAAA,CAAAA,Q;MACAR,SAAAA,GAAAA,kBAAAA,CAAAA,S;MACAE,OAAAA,GAAAA,kBAAAA,CAAAA,O;MACAY,eAAAA,GAAAA,kBAAAA,CAAAA,e;iDACAP,K;MAASb,UAAAA,GAAAA,qBAAAA,CAAAA,U;MAAYD,QAAAA,GAAAA,qBAAAA,CAAAA,Q;MAAUG,cAAAA,GAAAA,qBAAAA,CAAAA,c;MAAgBD,cAAAA,GAAAA,qBAAAA,CAAAA,c;;AAEjD,MAAMmF,SAAS,GAAG5C,cAAc,CAAhC,qBAAgC,CAAhC;AACA,MAAMF,GAAG,GAAGC,YAAY,CAAA,OAAA,EAAxB,YAAwB,CAAxB;AAEAhC,EAAAA,SAAAA,CAAgB,YAAA;AACd;AACA,QAAM8E,KAAK,GAAGC,qBAAqB,CAAA,SAAA,EAAnC,cAAmC,CAAnC;;AACA,QAAIrF,cAAc,IAAIoF,KAAK,IAA3B,IAAA,EAAqC;AACnCvE,MAAAA,QAAQ,CAAC;AACP8B,QAAAA,IAAI,EADG,oBAAA;AAEPC,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAEsC;AAAT;AAFF,OAAD,CAARvE;AAID;;AACD,QAAIyE,OAAO,GAAG,MAAM,CAAN,UAAA,CACZ,YAAA;AAAA,aAAMtF,cAAc,IAAIa,QAAQ,CAAC;AAAE8B,QAAAA,IAAI,EAAN,eAAA;AAAyBC,QAAAA,OAAO,EAAE;AAAlC,OAAD,CAAhC;AADY,KAAA,EAAd,IAAc,CAAd;AAIA,WAAO,YAAA;AAAA,aAAMtB,MAAM,CAANA,YAAAA,CAAN,OAAMA,CAAN;AAAP,KAAA;AAbFhB,GAAAA,EAcG,CAAA,QAAA,EAAA,SAAA,EAdHA,cAcG,CAdHA,CAAAA;AAgBA,MAAMiF,mBAAmB,GAAGC,WAAW,CAACL,SAAS,CAAjD,MAAuC,CAAvC;AACA,MAAMM,YAAY,GAAGD,WAAW,CAACL,SAAS,CAA1C,cAA0C,CAAV,CAAhC;AACA,MAAMO,kBAAkB,GAAGF,WAAW,CAAtC,cAAsC,CAAtC;AAEAlF,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAIL,cAAc,GAAGkF,SAAS,CAATA,MAAAA,GAArB,CAAA,EAA2C;AACzC;AACA;AACA;AACAtE,MAAAA,QAAQ,CAAC;AACP8B,QAAAA,IAAI,EADG,oBAAA;AAEPC,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAEqC,SAAS,CAATA,MAAAA,GAAmB;AAA5B;AAFF,OAAD,CAARtE;AAJF,KAAA,MAQO,KAAA;AAEL;AACA;AACA;AACA;AACA;AACA0E,IAAAA,mBAAmB,KAAKJ,SAAS,CAAjCI,MAAAA,IACAtF,cAAc,GAAG,CADjBsF,CAAAA,IAAAA,YAAAA,IAGAG,kBAAkB,KAHlBH,cAAAA,IAIAJ,SAAS,CAATA,cAAS,CAATA,KAXK,YAAA,EAYL;AACAtE,MAAAA,QAAQ,CAAC;AACP8B,QAAAA,IAAI,EADG,oBAAA;AAEPC,QAAAA,OAAO,EAAE;AACPE,UAAAA,KAAK,EAAE,SAAS,CAAT,SAAA,CAAoB,UAAA,CAAA,EAAA;AAAA,mBAAO6C,CAAC,CAADA,GAAAA,KAAUF,YAAY,CAA7B,GAAA;AAApB,WAAA;AADA;AAFF,OAAD,CAAR5E;AAMD;AA5BHP,GAAAA,EA6BG,CAAA,QAAA,EAAA,SAAA,EAAA,mBAAA,EAAA,YAAA,EAAA,kBAAA,EA7BHA,cA6BG,CA7BHA,CAAAA;AAsCA,MAAIsF,aAAa,GAAG3C,SAAS,CAC3B,SAAA,aAAA,CAAA,KAAA,EAAA;QACQqB,GAAAA,GAAQzB,KAAAA,CAARyB,G;;AAEN,QAAI,CAAJ,UAAA,EAAiB;AACf;AACD;;AAED,YAAA,GAAA;AACE,WAAA,OAAA;AACA,WAAA,GAAA;AACE,YAAIuB,QAAQ,GAAG,SAAS,CAAT,IAAA,CACb,UAAA,IAAA,EAAA;AAAA,iBAAUpD,IAAI,CAAJA,KAAAA,KAAV,cAAA;AAFJ,SACiB,CAAf,CADF,CAAA;AAKE;AACA;;AACA,YAAA,QAAA,EAAc;AACZ,cAAIoD,QAAQ,CAARA,MAAAA,IAAmBA,QAAQ,CAA/B,OAAA,EAAyC;AACvCA,YAAAA,QAAQ,CAARA,OAAAA,CAAAA,KAAAA;AADF,WAAA,MAEO;AACLhD,YAAAA,KAAK,CADA,cACLA,GADK,CAAA;AAGL;AACA;;AACAtB,YAAAA,KAAK,CAAClB,SAAS,CAAfkB,OAAK,CAALA;AACAJ,YAAAA,eAAe,CAAfA,OAAAA,CAAwB0E,QAAQ,CAAhC1E,KAAAA,KACEA,eAAe,CAAfA,OAAAA,CAAwB0E,QAAQ,CADlC1E,KACEA,GADFA;AAEAN,YAAAA,QAAQ,CAAC;AAAE8B,cAAAA,IAAI,EAAE1D;AAAR,aAAD,CAAR4B;AACD;AACF;;AACD;;AACF,WAAA,QAAA;AACEU,QAAAA,KAAK,CAAClB,SAAS,CAAfkB,OAAK,CAALA;AACAV,QAAAA,QAAQ,CAAC;AAAE8B,UAAAA,IAAI,EAAN,UAAA;AAAoBC,UAAAA,OAAO,EAAE;AAAEvC,YAAAA,SAAS,EAATA;AAAF;AAA7B,SAAD,CAARQ;AACA;;AACF,WAAA,KAAA;AACE;AACAgC,QAAAA,KAAK,CAALA,cAAAA;AACA;;AACF;AACE;AACA;AACA,YAAIiD,QAAQ,CAARA,GAAQ,CAARA,IAAiBxB,GAAG,CAAHA,MAAAA,KAArB,CAAA,EAAuC;AACrC,cAAMyB,KAAK,GAAG/F,cAAc,GAAGsE,GAAG,CAAlC,WAA+BA,EAA/B;AACAzD,UAAAA,QAAQ,CAAC;AACP8B,YAAAA,IAAI,EADG,eAAA;AAEPC,YAAAA,OAAO,EAAEmD;AAFF,WAAD,CAARlF;AAID;;AACD;AA1CJ;AARyB,GAAA,EAqD3BmF,oBAAoB,CAAA,qBAAA,EAAwB;AAC1CC,IAAAA,YAAY,EAD8B,cAAA;AAE1CC,IAAAA,WAAW,EAF+B,UAAA;AAG1CC,IAAAA,MAAM,EAHoC,KAAA;AAI1CC,IAAAA,MAAM,EAAE,SAAA,MAAA,CAAA,IAAA,EAAA;AAAA,aAAU,CAAC3D,IAAI,CAAf,QAAA;AAJkC,KAAA;AAK1C4D,IAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,KAAA,EAAA;AACRxF,MAAAA,QAAQ,CAAC;AACP8B,QAAAA,IAAI,EADG,oBAAA;AAEPC,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAFF,OAAD,CAARjC;AANwC,KAAA;AAW1CyD,IAAAA,GAAG,EAAE;AAXqC,GAAxB,CArDO,CAA7B;AAoEA,SAAA;AAEE;AACA;AACAhE,IAAAA,aAAAA,CAAAA,IAAAA,CAAAA;AAEE;AACA;AAHFA,MAAAA,MAAAA,CAAAA,MAAAA,CAAAA;+BAIyBuE,aAAa,CAAbA,cAAa,CAAbA,IAAiC7B,SAJ1D1C;yBAQmBR,QAAQ,IAAIkD,SAR/B1C;AASE;AACA;AACA;AACAsE,MAAAA,IAAI,EAAC,MAZPtE;AAaEwE,MAAAA,QAAQ,EAAE,CAAC;AAbbxE,KAAAA,EAcM8B,KAdN9B,EAcM8B;AACJC,MAAAA,GAAG,EAAEA,GADDD;+BAEkB,EAFlBA;AAGJjC,MAAAA,EAAE,EAAEa,MAHAoB;AAIJF,MAAAA,SAAS,EAAEe,SAAS,CAAA,SAAA,EAAA,aAAA;AAJhBb,KAdN9B,CAAAA,EAAAA,QAAAA;AAJF;AA7IgC,CAAA,C;;AAsLlC,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACX4E,EAAAA,SAAS,CAATA,WAAAA,GAAAA,WAAAA;AACAA,EAAAA,SAAS,CAATA,SAAAA,GAAsB;AACpB9E,IAAAA,QAAQ,EAAEyB,SAAS,CAACqB;AADA,GAAtBgC;AAGD,C,CAAA;;AAID;;;;;;;;;;;;;IAWMoB,QAAQ,GAAA,aAAGvE,gBAAgB,CAC/B,SAAA,QAAA,CAAA,KAAA,EAAA,YAAA,EAAA;uBAAoBC,E;MAAAA,EAAAA,GAAAA,QAAAA,KAAAA,KAAAA,CAAAA,GAAK,GAALA,GAAK,Q;MAAKuE,SAAAA,GAAAA,KAAAA,CAAAA,S;MAAW3C,QAAAA,GAAAA,KAAAA,CAAAA,Q;MAAaxB,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAAAA,UAAAA,CAAAA,C;;AACpD,MAAA,SAAA,EAAe;AACboE,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,wEAAAA;AAGD;;AAED,SACE,aAAA,CAAA,KAAA,EAAA;AAAK5B,IAAAA,IAAI,EAAC,MAAV;AAAiBE,IAAAA,QAAQ,EAAE,CAAC;AAA5B,GAAA,EACE,aAAA,CAAA,YAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM1C,KADN,EACMA;AACJC,IAAAA,GAAG,EAAE2C,YADD5C;4BAEiB,EAFjBA;AAGJJ,IAAAA,EAAE,EAAEA,EAHAI;AAIJiB,IAAAA,MAAM,EAAE,IAJJjB;AAKJwB,IAAAA,QAAQ,EAAEA,QAAQ,IAAI6C;AALlBrE,GADN,CAAA,CADF,CADF;AAR6B,CAAA,C;;AA8BjC,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACXkE,EAAAA,QAAQ,CAARA,WAAAA,GAAAA,UAAAA;AACAA,EAAAA,QAAQ,CAARA,SAAAA,GAAqB;AACnBtE,IAAAA,EAAE,EAAEH,SAAS,CADM,GAAA;AAEnB0E,IAAAA,SAAS,EAAE1E,SAAS,CAAC6E;AAFF,GAArBJ;AAID,C,CAAA;;AAID;;;;;;;;;;IAQMK,QAAQ,GAAA,aAAG5E,gBAAgB,CAAuB,SAAA,QAAA,CAAA,KAAA,EAAA,YAAA,EAAA;2BACpD6E,M;MAAAA,MAAAA,GAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAS,IAATA,GAAS,Y;MAASxE,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,QAAAA,CAAAA,C;;AAGpB,SACE,aAAA,CAAA,WAAA,EAAA;AAAawE,IAAAA,MAAM,EAAEA;AAArB,GAAA,EACE,aAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAexE,KAAf,EAAeA;AAAOC,IAAAA,GAAG,EAAE2C,YAAZ5C;4BAA+C;AAA/CA,GAAf,CAAA,CADF,CADF;AAJ+B,CAAA,C;;AA8BjC,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACXuE,EAAAA,QAAQ,CAARA,WAAAA,GAAAA,UAAAA;AACAA,EAAAA,QAAQ,CAARA,SAAAA,GAAqB;AACnBvG,IAAAA,QAAQ,EAAEyB,SAAS,CAATA,IAAAA,CAAeoD;AADN,GAArB0B;AAGD,C,CAAA;;AAID;;;;;;;;;;;;IAUME,WAAW,GAAA,aAAG9E,gBAAgB,CAClC,SAAA,WAAA,CAAA,KAAA,EAAA,YAAA,EAAA;uBACIC,E;MAAIC,IAAAA,GAAAA,QAAAA,KAAAA,KAAAA,CAAAA,GAAO,KAAPA,GAAO,Q;MAAO7B,QAAAA,GAAAA,KAAAA,CAAAA,Q;2BAAUwG,M;MAAAA,MAAAA,GAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAS,IAATA,GAAS,Y;MAAME,QAAAA,GAAAA,KAAAA,CAAAA,Q;MAAa1E,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,IAAAA,EAAAA,UAAAA,EAAAA,QAAAA,EAAAA,UAAAA,CAAAA,C;;2BAUtD9B,UAAAA,CAAAA,WAAAA,C;MANFD,SAAAA,GAAAA,kBAAAA,CAAAA,S;MACAa,gBAAAA,GAAAA,kBAAAA,CAAAA,gB;MACAL,QAAAA,GAAAA,kBAAAA,CAAAA,Q;MACAN,OAAAA,GAAAA,kBAAAA,CAAAA,O;MACAC,UAAAA,GAAAA,kBAAAA,CAAAA,U;MACST,UAAAA,GAAAA,kBAAAA,CAATa,KAASb,CAAAA,U;;AAGX,MAAMsC,GAAG,GAAGC,YAAY,CAAA,UAAA,EAAxB,YAAwB,CAAxB;AAEAhC,EAAAA,SAAAA,CAAgB,YAAA;AACd,QAAImE,aAAa,GAAGC,gBAAgB,CAAClE,UAAU,CAA/C,OAAoC,CAApC;;AACA,aAAA,QAAA,CAAA,KAAA,EAAA;AACE,UAAIU,gBAAgB,CAApB,OAAA,EAA8B;AAC5BA,QAAAA,gBAAgB,CAAhBA,OAAAA,GAAAA,KAAAA;AADF,OAAA,MAEO,IACL,CAAC6F,0BAA0B,CAACvG,UAAU,CAAX,OAAA,EAAqBqC,KAAK,CADhD,MACsB,CADtB,EAEL;AACA;AACAhC,QAAAA,QAAQ,CAAC;AAAE8B,UAAAA,IAAI,EAAN,UAAA;AAAoBC,UAAAA,OAAO,EAAE;AAAEvC,YAAAA,SAAS,EAATA;AAAF;AAA7B,SAAD,CAARQ;AACD;AACF;;AACD4D,IAAAA,aAAa,CAAbA,gBAAAA,CAAAA,WAAAA,EAAAA,QAAAA,EAZc,CAYdA;AAEA;;AACA,WAAO,YAAA;AACLA,MAAAA,aAAa,CAAbA,mBAAAA,CAAAA,WAAAA,EAAAA,QAAAA,EADK,CACLA;AADF,KAAA;AAfFnE,GAAAA,EAmBG,CAAA,gBAAA,EAAA,SAAA,EAAA,QAAA,EAAA,OAAA,EAnBHA,UAmBG,CAnBHA,CAAAA;;AAqBA,MAAI0G,WAAW,GAAA,QAAA,CAAA;AACb3E,IAAAA,GAAG,EADU,GAAA;AAEb;AACA,uBAHa,EAAA;AAIb,+BAJa,EAAA;AAKb4E,IAAAA,MAAM,EAAE,CALK,UAAA;AAMb7G,IAAAA,QAAQ,EAARA;AANa,GAAA,EAAf,KAAe,CAAf;;AAUA,SAAOwG,MAAM,GACX,aAAA,CAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACMI,WADN,EACMA;AACJhF,IAAAA,EAAE,EAAEC,IADA+E;AAEJE,IAAAA,SAAS,EAAE7G,SAFP2G;AAGJF,IAAAA,QAAQ,EAAEA;AAHNE,GADN,CAAA,CADW,GAQX1G,aAAAA,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EARF,WAQEA,CAAAA,CARF;AA/CgC,CAAA,C;;AAyFpC,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACXuG,EAAAA,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AACAA,EAAAA,WAAW,CAAXA,SAAAA,GAAwB;AACtBzG,IAAAA,QAAQ,EAAEyB,SAAS,CAACqB;AADE,GAAxB2D;AAGD,C,CAAA;;AAID;;;;;;;AAKA,SAAA,oBAAA,GAAA;2BAGMvG,UAAAA,CAAAA,WAAAA,C;MADOP,UAAAA,GAAAA,kBAAAA,CAATa,KAASb,CAAAA,U;;AAEX,SAAO,OAAA,CAAc,YAAA;AAAA,WAAO;AAAEA,MAAAA,UAAU,EAAVA;AAAF,KAAP;AAAd,GAAA,EAAsC,CAA7C,UAA6C,CAAtC,CAAP;AACD,C,CAAA;;AAID;;;;;;;AAKA,SAAA,qBAAA,CAAA,KAAA,EAAA,MAAA,EAAA;MAEEoH,MAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,MAAAA,GAAiB,EAAjBA;;;AAEA,MAAI,CAAJ,MAAA,EAAa;AACX,WAAA,IAAA;AACD;;AAED,MAAMC,KAAK,GAAG,KAAK,CAAL,IAAA,CAAW,UAAA,IAAA,EAAA;;;AACvB,WAAO3E,IAAI,CAAJA,QAAAA,GAAAA,KAAAA,GAAAA,CAAAA,aAAAA,GAEHA,IAAI,CAFDA,OAAAA,MAAAA,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,qBAAAA,GAEHA,aAAAA,CAFGA,OAAAA,MAAAA,IAAAA,IAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,sBAAAA,GAEHA,qBAAAA,CAFGA,SAAAA,MAAAA,IAAAA,IAAAA,sBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAEHA,sBAAAA,CAAAA,WAAAA,GAAAA,UAAAA,CAFJ,MAEIA,CAFJ;AADF,GAAc,CAAd;AAKA,SAAO2E,KAAK,GAAG3F,KAAK,CAALA,OAAAA,CAAH,KAAGA,CAAH,GAAZ,IAAA;AACD;;AAED,SAAA,aAAA,CAAA,KAAA,EAAA;2BACmBnB,UAAAA,CAAAA,WAAAA,C;MAAXU,MAAAA,GAAAA,kBAAAA,CAAAA,M;;AACN,SAAO8B,KAAK,IAALA,IAAAA,IAAiBA,KAAK,GAAG,CAAzBA,CAAAA,GACH7B,MAAM,CAAA,YAAA,KAAA,EADH6B,MACG,CADHA,GAAP,SAAA;AAGD;;AAuBD,SAAA,YAAA,CAAA,WAAA,EAAA;AACE,SAAOuE,WAAW,CAAXA,KAAAA,KAAAA,CAAAA,IAA2BA,WAAW,CAAXA,MAAAA,KAAlC,CAAA;AACD;;AAED,SAAA,KAAA,CAAA,OAAA,EAAA;AAGEhD,EAAAA,OAAO,IAAIA,OAAO,CAAlBA,KAAWA,EAAXA;AACD;;AAED,SAAA,0BAAA,CAAA,OAAA,EAAA,MAAA,EAAA;AAIE,SAAO,CAAC,EAAEiD,OAAO,IAAIA,OAAO,CAAPA,QAAAA,CAArB,MAAqBA,CAAb,CAAR;AACD;;AAED,SAAA,OAAA,CAAA,KAAA,EAAA,MAAA,EAAA;MAEEC,MAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,MAAAA,GAA2B,EAA3BA;;;AAEA,UAAQA,MAAM,CAAd,IAAA;AACE,SAAA,eAAA;AACE,aAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEExH,QAAAA,UAAU,EAFZ,KAAA;AAGEE,QAAAA,cAAc,EAAE,CAAC;AAHnB,OAAA,CAAA;;AAKF,SAAA,UAAA;AACE,aAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEF,QAAAA,UAAU,EAFZ,KAAA;AAGEE,QAAAA,cAAc,EAAE,CAAC;AAHnB,OAAA,CAAA;;AAKF,SAAA,uBAAA;AACE,aAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEF,QAAAA,UAAU,EAFZ,IAAA;AAGEE,QAAAA,cAAc,EAAE;AAHlB,OAAA,CAAA;;AAKF,SAAA,kBAAA;AACE,aAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEF,QAAAA,UAAU,EAFZ,IAAA;AAGEE,QAAAA,cAAc,EAAEsH,MAAM,CAANA,OAAAA,CAAezE;AAHjC,OAAA,CAAA;;AAKF,SAAA,iBAAA;AACE,aAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE/C,QAAAA,UAAU,EAFZ,IAAA;AAGEE,QAAAA,cAAc,EAAE,CAAC;AAHnB,OAAA,CAAA;;AAKF,SAAA,oBAAA;AACE,UAAIsH,MAAM,CAANA,OAAAA,CAAAA,KAAAA,IAAJ,CAAA,EAA+B;AAC7B,eAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEtH,UAAAA,cAAc,EACZsH,MAAM,CAANA,OAAAA,CAAAA,GAAAA,IAAAA,IAAAA,GACIC,IAAI,CAAJA,GAAAA,CAASA,IAAI,CAAJA,GAAAA,CAASD,MAAM,CAANA,OAAAA,CAATC,KAAAA,EAATA,CAASA,CAATA,EAA4CD,MAAM,CAANA,OAAAA,CADhDA,GACIC,CADJD,GAEIC,IAAI,CAAJA,GAAAA,CAASD,MAAM,CAANA,OAAAA,CAATC,KAAAA,EAAAA,CAAAA;AALR,SAAA,CAAA;AAOD;;AACD,aAAA,KAAA;;AACF,SAAA,qBAAA;AACE,aAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEvH,QAAAA,cAAc,EAAE,CAAC;AAFnB,OAAA,CAAA;;AAIF,SAAA,aAAA;AACE,aAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEH,QAAAA,QAAQ,EAAEyH,MAAM,CAAC3E;AAFnB,OAAA,CAAA;;AAIF,SAAA,eAAA;AACE,UAAI,OAAO2E,MAAM,CAAb,OAAA,KAAJ,WAAA,EAA2C;AACzC,eAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEvH,UAAAA,cAAc,EAAEuH,MAAM,CAAC3E;AAFzB,SAAA,CAAA;AAID;;AACD,aAAA,KAAA;;AACF;AACE,aAAA,KAAA;AA7DJ;AA+DD","sourcesContent":["/**\n * Welcome to @reach/menu-button!\n *\n * An accessible dropdown menu for the common dropdown menu button design\n * pattern.\n *\n * @see Docs     https://reach.tech/menu-button\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/menu-button\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n *\n * TODO: Fix flash when opening a menu button on a screen with another open menu\n */\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useId } from \"@reach/auto-id\";\nimport { Popover, Position } from \"@reach/popover\";\nimport {\n  createDescendantContext,\n  DescendantProvider,\n  useDescendant,\n  useDescendants,\n  useDescendantsInit,\n  useDescendantKeyDown,\n} from \"@reach/descendants\";\nimport {\n  createNamedContext,\n  forwardRefWithAs,\n  getOwnerDocument,\n  isFunction,\n  isString,\n  makeId,\n  noop,\n  useCheckStyles,\n  useForkedRef,\n  usePrevious,\n  wrapEvent,\n} from \"@reach/utils\";\n\nimport type { Descendant } from \"@reach/descendants\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Actions\n\nconst CLEAR_SELECTION_INDEX = \"CLEAR_SELECTION_INDEX\";\nconst CLICK_MENU_ITEM = \"CLICK_MENU_ITEM\";\nconst CLOSE_MENU = \"CLOSE_MENU\";\nconst OPEN_MENU_AT_FIRST_ITEM = \"OPEN_MENU_AT_FIRST_ITEM\";\nconst OPEN_MENU_AT_INDEX = \"OPEN_MENU_AT_INDEX\";\nconst OPEN_MENU_CLEARED = \"OPEN_MENU_CLEARED\";\nconst SEARCH_FOR_ITEM = \"SEARCH_FOR_ITEM\";\nconst SELECT_ITEM_AT_INDEX = \"SELECT_ITEM_AT_INDEX\";\nconst SET_BUTTON_ID = \"SET_BUTTON_ID\";\n\nconst MenuDescendantContext = createDescendantContext<MenuButtonDescendant>(\n  \"MenuDescendantContext\"\n);\nconst MenuContext = createNamedContext<InternalMenuContextValue>(\n  \"MenuContext\",\n  {} as InternalMenuContextValue\n);\n\nconst initialState: MenuButtonState = {\n  // The button ID is needed for aria controls and can be set directly and\n  // updated for top-level use via context. Otherwise a default is set by useId.\n  // TODO: Consider deprecating direct ID in 1.0 in favor of id at the top level\n  //       for passing deterministic IDs to descendent components.\n  buttonId: null,\n\n  // Whether or not the menu is expanded\n  isExpanded: false,\n\n  // When a user begins typing a character string, the selection will change if\n  // a matching item is found\n  typeaheadQuery: \"\",\n\n  // The index of the current selected item. When the selection is cleared a\n  // value of -1 is used.\n  selectionIndex: -1,\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Menu\n *\n * The wrapper component for the other components. No DOM element is rendered.\n *\n * @see Docs https://reach.tech/menu-button#menu\n */\nconst Menu: React.FC<MenuProps> = ({ id, children }) => {\n  let buttonRef = React.useRef(null);\n  let menuRef = React.useRef(null);\n  let popoverRef = React.useRef(null);\n  let [descendants, setDescendants] = useDescendantsInit<\n    MenuButtonDescendant\n  >();\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n  let _id = useId(id);\n  let menuId = id || makeId(\"menu\", _id);\n\n  // We use an event listener attached to the window to capture outside clicks\n  // that close the menu. We don't want the initial button click to trigger this\n  // when a menu is closed, so we can track this behavior in a ref for now.\n  // We shouldn't need this when we rewrite with state machine logic.\n  let buttonClickedRef = React.useRef(false);\n\n  // We will put children callbacks in a ref to avoid triggering endless render\n  // loops when using render props if the app code doesn't useCallback\n  // https://github.com/reach/reach-ui/issues/523\n  let selectCallbacks = React.useRef([]);\n\n  // If the popover's position overlaps with an option when the popover\n  // initially opens, the mouseup event will trigger a select. To prevent that,\n  // we decide the menu button is only ready to make a selection if the pointer\n  // moves first, otherwise the user is just registering the initial button\n  // click rather than selecting an item. This is similar to a native select\n  // on most platforms, and our menu button popover works similarly.\n  let readyToSelect = React.useRef(false);\n\n  let context: InternalMenuContextValue = {\n    buttonRef,\n    dispatch,\n    menuId,\n    menuRef,\n    popoverRef,\n    buttonClickedRef,\n    readyToSelect,\n    selectCallbacks,\n    state,\n  };\n\n  // When the menu is open, focus is placed on the menu itself so that\n  // keyboard navigation is still possible.\n  React.useEffect(() => {\n    if (state.isExpanded) {\n      // @ts-ignore\n      window.__REACH_DISABLE_TOOLTIPS = true;\n      window.requestAnimationFrame(() => {\n        focus(menuRef.current);\n      });\n    } else {\n      // We want to ignore the immediate focus of a tooltip so it doesn't pop\n      // up again when the menu closes, only pops up when focus returns again\n      // to the tooltip (like native OS tooltips).\n      // @ts-ignore\n      window.__REACH_DISABLE_TOOLTIPS = false;\n    }\n  }, [state.isExpanded]);\n\n  useCheckStyles(\"menu-button\");\n\n  return (\n    <DescendantProvider\n      context={MenuDescendantContext}\n      items={descendants}\n      set={setDescendants}\n    >\n      <MenuContext.Provider value={context}>\n        {isFunction(children)\n          ? children({\n              isExpanded: state.isExpanded,\n              // TODO: Remove in 1.0\n              isOpen: state.isExpanded,\n            })\n          : children}\n      </MenuContext.Provider>\n    </DescendantProvider>\n  );\n};\n\n/**\n * @see Docs https://reach.tech/menu-button#menu-props\n */\ninterface MenuProps {\n  /**\n   * Requires two children: a `<MenuButton>` and a `<MenuList>`.\n   *\n   * @see Docs https://reach.tech/menu-button#menu-children\n   */\n  children:\n    | React.ReactNode\n    | ((\n        props: MenuContextValue & {\n          // TODO: Remove in 1.0\n          isOpen: boolean;\n        }\n      ) => React.ReactNode);\n  id?: string;\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\";\n  Menu.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuButton\n *\n * Wraps a DOM `button` that toggles the opening and closing of the dropdown\n * menu. Must be rendered inside of a `<Menu>`.\n *\n * @see Docs https://reach.tech/menu-button#menubutton\n */\nconst MenuButton = forwardRefWithAs<MenuButtonProps, \"button\">(\n  function MenuButton(\n    { as: Comp = \"button\", onKeyDown, onMouseDown, id, ...props },\n    forwardedRef\n  ) {\n    let {\n      buttonRef,\n      buttonClickedRef,\n      menuId,\n      state: { buttonId, isExpanded },\n      dispatch,\n    } = React.useContext(MenuContext);\n    let ref = useForkedRef(buttonRef, forwardedRef);\n    let items = useDescendants(MenuDescendantContext);\n    let firstNonDisabledIndex = React.useMemo(\n      () => items.findIndex((item) => !item.disabled),\n      [items]\n    );\n    React.useEffect(() => {\n      let newButtonId =\n        id != null\n          ? id\n          : menuId\n          ? makeId(\"menu-button\", menuId)\n          : \"menu-button\";\n      if (buttonId !== newButtonId) {\n        dispatch({\n          type: SET_BUTTON_ID,\n          payload: newButtonId,\n        });\n      }\n    }, [buttonId, dispatch, id, menuId]);\n\n    function handleKeyDown(event: React.KeyboardEvent) {\n      switch (event.key) {\n        case \"ArrowDown\":\n        case \"ArrowUp\":\n          event.preventDefault(); // prevent scroll\n          dispatch({\n            type: OPEN_MENU_AT_INDEX,\n            payload: { index: firstNonDisabledIndex },\n          });\n          break;\n        case \"Enter\":\n        case \" \":\n          dispatch({\n            type: OPEN_MENU_AT_INDEX,\n            payload: { index: firstNonDisabledIndex },\n          });\n          break;\n        default:\n          break;\n      }\n    }\n\n    function handleMouseDown(event: React.MouseEvent) {\n      if (!isExpanded) {\n        buttonClickedRef.current = true;\n      }\n      if (isRightClick(event.nativeEvent)) {\n        return;\n      } else if (isExpanded) {\n        dispatch({ type: CLOSE_MENU, payload: { buttonRef } });\n      } else {\n        dispatch({ type: OPEN_MENU_CLEARED });\n      }\n    }\n\n    return (\n      <Comp\n        // When the menu is displayed, the element with role `button` has\n        // `aria-expanded` set to `true`. When the menu is hidden, it is\n        // recommended that `aria-expanded` is not present.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n        aria-expanded={isExpanded ? true : undefined}\n        // The element with role `button` has `aria-haspopup` set to either\n        // `\"menu\"` or `true`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n        aria-haspopup\n        // Optionally, the element with role `button` has a value specified for\n        // `aria-controls` that refers to the element with role `menu`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n        aria-controls={menuId}\n        {...props}\n        ref={ref}\n        data-reach-menu-button=\"\"\n        id={buttonId || undefined}\n        onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n        onMouseDown={wrapEvent(onMouseDown, handleMouseDown)}\n        type=\"button\"\n      />\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menubutton-props\n */\ntype MenuButtonProps = {\n  /**\n   * Accepts any renderable content.\n   *\n   * @see Docs https://reach.tech/menu-button#menubutton-children\n   */\n  children: React.ReactNode;\n};\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\";\n  MenuButton.propTypes = {\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItemImpl\n *\n * MenuItem and MenuLink share most of the same functionality captured here.\n */\nconst MenuItemImpl = forwardRefWithAs<MenuItemImplProps, \"div\">(\n  function MenuItemImpl(\n    {\n      as: Comp,\n      index: indexProp,\n      isLink = false,\n      onClick,\n      onDragStart,\n      onMouseDown,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseMove,\n      onMouseUp,\n      onSelect,\n      disabled,\n      valueText: valueTextProp,\n      ...props\n    },\n    forwardedRef\n  ) {\n    let {\n      buttonRef,\n      dispatch,\n      readyToSelect,\n      selectCallbacks,\n      state: { selectionIndex, isExpanded },\n    } = React.useContext(MenuContext);\n    let ownRef = React.useRef<HTMLElement | null>(null);\n    // After the ref is mounted to the DOM node, we check to see if we have an\n    // explicit valueText prop before looking for the node's textContent for\n    // typeahead functionality.\n    let [valueText, setValueText] = React.useState(valueTextProp || \"\");\n    let setValueTextFromDom = React.useCallback(\n      (node) => {\n        if (node) {\n          ownRef.current = node;\n          if (\n            !valueTextProp ||\n            (node.textContent && valueText !== node.textContent)\n          ) {\n            setValueText(node.textContent);\n          }\n        }\n      },\n      [valueText, valueTextProp]\n    );\n\n    let ref = useForkedRef(forwardedRef, setValueTextFromDom);\n\n    let mouseEventStarted = React.useRef(false);\n\n    let index = useDescendant(\n      {\n        element: ownRef.current!,\n        key: valueText,\n        disabled,\n        isLink,\n      },\n      MenuDescendantContext,\n      indexProp\n    );\n    let isSelected = index === selectionIndex && !disabled;\n\n    // Update the callback ref array on every render\n    selectCallbacks.current[index] = onSelect;\n\n    function select() {\n      focus(buttonRef.current);\n      onSelect && onSelect();\n      dispatch({ type: CLICK_MENU_ITEM });\n    }\n\n    function handleClick(event: React.MouseEvent) {\n      if (isLink && !isRightClick(event.nativeEvent)) {\n        if (disabled) {\n          event.preventDefault();\n        } else {\n          select();\n        }\n      }\n    }\n\n    function handleDragStart(event: React.MouseEvent) {\n      // Because we don't preventDefault on mousedown for links (we need the\n      // native click event), clicking and holding on a link triggers a\n      // dragstart which we don't want.\n      if (isLink) {\n        event.preventDefault();\n      }\n    }\n\n    function handleMouseDown(event: React.MouseEvent) {\n      if (isRightClick(event.nativeEvent)) return;\n\n      if (isLink) {\n        // Signal that the mouse is down so we can react call the right function\n        // if the user is clicking on a link.\n        mouseEventStarted.current = true;\n      } else {\n        event.preventDefault();\n      }\n    }\n\n    function handleMouseEnter(event: React.MouseEvent) {\n      if (!isSelected && index != null && !disabled) {\n        dispatch({ type: SELECT_ITEM_AT_INDEX, payload: { index } });\n      }\n    }\n\n    function handleMouseLeave(event: React.MouseEvent) {\n      // Clear out selection when mouse over a non-menu item child.\n      dispatch({ type: CLEAR_SELECTION_INDEX });\n    }\n\n    function handleMouseMove() {\n      readyToSelect.current = true;\n      if (!isSelected && index != null && !disabled) {\n        dispatch({ type: SELECT_ITEM_AT_INDEX, payload: { index } });\n      }\n    }\n\n    function handleMouseUp(event: React.MouseEvent) {\n      if (!readyToSelect.current) {\n        readyToSelect.current = true;\n        return;\n      }\n      if (isRightClick(event.nativeEvent)) return;\n\n      if (isLink) {\n        // If a mousedown event was initiated on a menu link followed by a\n        // mouseup event on the same link, we do nothing; a click event will\n        // come next and handle selection. Otherwise, we trigger a click event.\n        if (mouseEventStarted.current) {\n          mouseEventStarted.current = false;\n        } else if (ownRef.current) {\n          ownRef.current.click();\n        }\n      } else {\n        if (!disabled) {\n          select();\n        }\n      }\n    }\n\n    // When the menu closes, reset readyToSelect for the next interaction.\n    React.useEffect(() => {\n      if (!isExpanded) {\n        readyToSelect.current = false;\n      }\n    }, [isExpanded, readyToSelect]);\n\n    // Any time a mouseup event occurs anywhere in the document, we reset the\n    // mouseEventStarted ref so we can check it again when needed.\n    React.useEffect(() => {\n      let ownerDocument = getOwnerDocument(ownRef.current)!;\n      let listener = () => (mouseEventStarted.current = false);\n      ownerDocument.addEventListener(\"mouseup\", listener);\n      return () => ownerDocument.removeEventListener(\"mouseup\", listener);\n    }, []);\n\n    return (\n      <Comp\n        role=\"menuitem\"\n        id={useMenuItemId(index)}\n        tabIndex={-1}\n        {...props}\n        ref={ref}\n        aria-disabled={disabled || undefined}\n        data-reach-menu-item=\"\"\n        data-selected={isSelected ? \"\" : undefined}\n        data-valuetext={valueText}\n        onClick={wrapEvent(onClick, handleClick)}\n        onDragStart={wrapEvent(onDragStart, handleDragStart)}\n        onMouseDown={wrapEvent(onMouseDown, handleMouseDown)}\n        onMouseEnter={wrapEvent(onMouseEnter, handleMouseEnter)}\n        onMouseLeave={wrapEvent(onMouseLeave, handleMouseLeave)}\n        onMouseMove={wrapEvent(onMouseMove, handleMouseMove)}\n        onMouseUp={wrapEvent(onMouseUp, handleMouseUp)}\n      />\n    );\n  }\n);\n\ntype MenuItemImplProps = {\n  /**\n   * You can put any type of content inside of a `<MenuItem>`.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitem-children\n   */\n  children: React.ReactNode;\n  /**\n   * Callback that fires when a `MenuItem` is selected.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitem-onselect\n   */\n  onSelect(): void;\n  index?: number;\n  isLink?: boolean;\n  valueText?: string;\n  /**\n   * Whether or not the item is disabled from selection and navigation.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitem-disabled\n   */\n  disabled?: boolean;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItem\n *\n * Handles menu selection. Must be a direct child of a `<MenuList>`.\n *\n * @see Docs https://reach.tech/menu-button#menuitem\n */\nconst MenuItem = forwardRefWithAs<MenuItemProps, \"div\">(function MenuItem(\n  { as = \"div\", ...props },\n  forwardedRef\n) {\n  return <MenuItemImpl {...props} ref={forwardedRef} as={as} />;\n});\n\n/**\n * @see Docs https://reach.tech/menu-button#menuitem-props\n */\ntype MenuItemProps = Omit<MenuItemImplProps, \"isLink\">;\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\";\n  MenuItem.propTypes = {\n    as: PropTypes.any,\n    onSelect: PropTypes.func.isRequired,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuItems\n *\n * A low-level wrapper for menu items. Compose it with `MenuPopover` for more\n * control over the nested components and their rendered DOM nodes, or if you\n * need to nest arbitrary components between the outer wrapper and your list.\n *\n * @see Docs https://reach.tech/menu-button#menuitems\n */\nconst MenuItems = forwardRefWithAs<MenuItemsProps, \"div\">(function MenuItems(\n  { as: Comp = \"div\", children, id, onKeyDown, ...props },\n  forwardedRef\n) {\n  const {\n    menuId,\n    dispatch,\n    buttonRef,\n    menuRef,\n    selectCallbacks,\n    state: { isExpanded, buttonId, selectionIndex, typeaheadQuery },\n  } = React.useContext(MenuContext);\n  const menuItems = useDescendants(MenuDescendantContext);\n  const ref = useForkedRef(menuRef, forwardedRef);\n\n  React.useEffect(() => {\n    // Respond to user char key input with typeahead\n    const match = findItemFromTypeahead(menuItems, typeaheadQuery);\n    if (typeaheadQuery && match != null) {\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: { index: match },\n      });\n    }\n    let timeout = window.setTimeout(\n      () => typeaheadQuery && dispatch({ type: SEARCH_FOR_ITEM, payload: \"\" }),\n      1000\n    );\n    return () => window.clearTimeout(timeout);\n  }, [dispatch, menuItems, typeaheadQuery]);\n\n  const prevMenuItemsLength = usePrevious(menuItems.length);\n  const prevSelected = usePrevious(menuItems[selectionIndex]);\n  const prevSelectionIndex = usePrevious(selectionIndex);\n\n  React.useEffect(() => {\n    if (selectionIndex > menuItems.length - 1) {\n      // If for some reason our selection index is larger than our possible\n      // index range (let's say the last item is selected and the list\n      // dynamically updates), we need to select the last item in the list.\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: { index: menuItems.length - 1 },\n      });\n    } else if (\n      // Checks if\n      //  - menu length has changed\n      //  - selection index has not changed BUT selected item has changed\n      //\n      // This prevents any dynamic adding/removing of menu items from actually\n      // changing a user's expected selection.\n      prevMenuItemsLength !== menuItems.length &&\n      selectionIndex > -1 &&\n      prevSelected &&\n      prevSelectionIndex === selectionIndex &&\n      menuItems[selectionIndex] !== prevSelected\n    ) {\n      dispatch({\n        type: SELECT_ITEM_AT_INDEX,\n        payload: {\n          index: menuItems.findIndex((i) => i.key === prevSelected.key),\n        },\n      });\n    }\n  }, [\n    dispatch,\n    menuItems,\n    prevMenuItemsLength,\n    prevSelected,\n    prevSelectionIndex,\n    selectionIndex,\n  ]);\n\n  let handleKeyDown = wrapEvent(\n    function handleKeyDown(event: React.KeyboardEvent) {\n      let { key } = event;\n\n      if (!isExpanded) {\n        return;\n      }\n\n      switch (key) {\n        case \"Enter\":\n        case \" \":\n          let selected = menuItems.find(\n            (item) => item.index === selectionIndex\n          );\n          // For links, the Enter key will trigger a click by default, but for\n          // consistent behavior across menu items we'll trigger a click when\n          // the spacebar is pressed.\n          if (selected) {\n            if (selected.isLink && selected.element) {\n              selected.element.click();\n            } else {\n              event.preventDefault();\n              // Focus the button first by default when an item is selected.\n              // We fire the onSelect callback next so the app can manage\n              // focus if needed.\n              focus(buttonRef.current);\n              selectCallbacks.current[selected.index] &&\n                selectCallbacks.current[selected.index]();\n              dispatch({ type: CLICK_MENU_ITEM });\n            }\n          }\n          break;\n        case \"Escape\":\n          focus(buttonRef.current);\n          dispatch({ type: CLOSE_MENU, payload: { buttonRef } });\n          break;\n        case \"Tab\":\n          // prevent leaving\n          event.preventDefault();\n          break;\n        default:\n          // Check if a user is typing some char keys and respond by setting\n          // the query state.\n          if (isString(key) && key.length === 1) {\n            const query = typeaheadQuery + key.toLowerCase();\n            dispatch({\n              type: SEARCH_FOR_ITEM,\n              payload: query,\n            });\n          }\n          break;\n      }\n    },\n    useDescendantKeyDown(MenuDescendantContext, {\n      currentIndex: selectionIndex,\n      orientation: \"vertical\",\n      rotate: false,\n      filter: (item) => !item.disabled,\n      callback: (index: number) => {\n        dispatch({\n          type: SELECT_ITEM_AT_INDEX,\n          payload: { index },\n        });\n      },\n      key: \"index\",\n    })\n  );\n\n  return (\n    // TODO: Should probably file a but in jsx-a11y, but this is correct\n    // according to https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n    // eslint-disable-next-line jsx-a11y/aria-activedescendant-has-tabindex\n    <Comp\n      // Refers to the descendant menuitem element that is visually indicated\n      // as focused.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n      aria-activedescendant={useMenuItemId(selectionIndex) || undefined}\n      // Refers to the element that contains the accessible name for the\n      // `menu`. The menu is labeled by the menu button.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html\n      aria-labelledby={buttonId || undefined}\n      // The element that contains the menu items displayed by activating the\n      // button has role menu.\n      // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\n      role=\"menu\"\n      tabIndex={-1}\n      {...props}\n      ref={ref}\n      data-reach-menu-items=\"\"\n      id={menuId}\n      onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n    >\n      {children}\n    </Comp>\n  );\n});\n\n/**\n * @see Docs https://reach.tech/menu-button#menuitems-props\n */\ntype MenuItemsProps = {\n  /**\n   * Can contain only `MenuItem` or a `MenuLink`.\n   *\n   * @see Docs https://reach.tech/menu-button#menuitems-children\n   */\n  children: React.ReactNode;\n};\n\nif (__DEV__) {\n  MenuItems.displayName = \"MenuItems\";\n  MenuItems.propTypes = {\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuLink\n *\n * Handles linking to a different page in the menu. By default it renders `<a>`,\n * but also accepts any other kind of Link as long as the `Link` uses the\n * `React.forwardRef` API.\n *\n * Must be a direct child of a `<MenuList>`.\n *\n * @see Docs https://reach.tech/menu-button#menulink\n */\nconst MenuLink = forwardRefWithAs<MenuLinkProps & { component?: any }, \"a\">(\n  function MenuLink({ as = \"a\", component, onSelect, ...props }, forwardedRef) {\n    if (component) {\n      console.warn(\n        \"[@reach/menu-button]: Please use the `as` prop instead of `component`.\"\n      );\n    }\n\n    return (\n      <div role=\"none\" tabIndex={-1}>\n        <MenuItemImpl\n          {...props}\n          ref={forwardedRef}\n          data-reach-menu-link=\"\"\n          as={as}\n          isLink={true}\n          onSelect={onSelect || noop}\n        />\n      </div>\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menulink-props\n */\ntype MenuLinkProps = Omit<MenuItemImplProps, \"isLink\" | \"onSelect\"> & {\n  onSelect?(): void;\n};\n\nif (__DEV__) {\n  MenuLink.displayName = \"MenuLink\";\n  MenuLink.propTypes = {\n    as: PropTypes.any,\n    component: PropTypes.any,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuList\n *\n * Wraps a DOM element that renders the menu items. Must be rendered inside of\n * a `<Menu>`.\n *\n * @see Docs https://reach.tech/menu-button#menulist\n */\nconst MenuList = forwardRefWithAs<MenuListProps, \"div\">(function MenuList(\n  { portal = true, ...props },\n  forwardedRef\n) {\n  return (\n    <MenuPopover portal={portal}>\n      <MenuItems {...props} ref={forwardedRef} data-reach-menu-list=\"\" />\n    </MenuPopover>\n  );\n});\n\n/**\n * @see Docs https://reach.tech/menu-button#menulist-props\n */\ntype MenuListProps = {\n  /**\n   * Whether or not the popover should be rendered inside a portal. Defaults to\n   * `true`.\n   *\n   * @see Docs https://reach.tech/menu-button#menulist-portal\n   */\n  portal?: boolean;\n  /**\n   * Can contain only `MenuItem` or a `MenuLink`.\n   *\n   * @see Docs https://reach.tech/menu-button#menulist-children\n   */\n  children: React.ReactNode;\n};\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\";\n  MenuList.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * MenuPopover\n *\n * A low-level wrapper for the popover that appears when a menu button is open.\n * You can compose it with `MenuItems` for more control over the nested\n * components and their rendered DOM nodes, or if you need to nest arbitrary\n * components between the outer wrapper and your list.\n *\n * @see Docs https://reach.tech/menu-button#menupopover\n */\nconst MenuPopover = forwardRefWithAs<MenuPopoverProps, \"div\">(\n  function MenuPopover(\n    { as: Comp = \"div\", children, portal = true, position, ...props },\n    forwardedRef\n  ) {\n    const {\n      buttonRef,\n      buttonClickedRef,\n      dispatch,\n      menuRef,\n      popoverRef,\n      state: { isExpanded },\n    } = React.useContext(MenuContext);\n\n    const ref = useForkedRef(popoverRef, forwardedRef);\n\n    React.useEffect(() => {\n      let ownerDocument = getOwnerDocument(popoverRef.current)!;\n      function listener(event: MouseEvent | TouchEvent) {\n        if (buttonClickedRef.current) {\n          buttonClickedRef.current = false;\n        } else if (\n          !popoverContainsEventTarget(popoverRef.current, event.target)\n        ) {\n          // We on want to close only if focus rests outside the menu\n          dispatch({ type: CLOSE_MENU, payload: { buttonRef } });\n        }\n      }\n      ownerDocument.addEventListener(\"mousedown\", listener);\n      // see https://github.com/reach/reach-ui/pull/700#discussion_r530369265\n      // ownerDocument.addEventListener(\"touchstart\", listener);\n      return () => {\n        ownerDocument.removeEventListener(\"mousedown\", listener);\n        // ownerDocument.removeEventListener(\"touchstart\", listener);\n      };\n    }, [buttonClickedRef, buttonRef, dispatch, menuRef, popoverRef]);\n\n    let commonProps = {\n      ref,\n      // TODO: remove in 1.0\n      \"data-reach-menu\": \"\",\n      \"data-reach-menu-popover\": \"\",\n      hidden: !isExpanded,\n      children,\n      ...props,\n    };\n\n    return portal ? (\n      <Popover\n        {...commonProps}\n        as={Comp}\n        targetRef={buttonRef as any}\n        position={position}\n      />\n    ) : (\n      <Comp {...commonProps} />\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/menu-button#menupopover-props\n */\ntype MenuPopoverProps = {\n  /**\n   * Must contain a `MenuItems`\n   *\n   * @see Docs https://reach.tech/menu-button#menupopover-children\n   */\n  children: React.ReactNode;\n  /**\n   * Whether or not the popover should be rendered inside a portal. Defaults to\n   * `true`.\n   *\n   * @see Docs https://reach.tech/menu-button#menupopover-portal\n   */\n  portal?: boolean;\n  /**\n   * A function used to determine the position of the popover in relation to the\n   * menu button. By default, the menu button will attempt to position the\n   * popover below the button aligned with its left edge. If this positioning\n   * results in collisions with any side of the window, the popover will be\n   * anchored to a different side to avoid those collisions if possible.\n   *\n   * @see Docs https://reach.tech/menu-button#menupopover-position\n   */\n  position?: Position;\n};\n\nif (__DEV__) {\n  MenuPopover.displayName = \"MenuPopover\";\n  MenuPopover.propTypes = {\n    children: PropTypes.node,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hook that exposes data for a given `Menu` component to its descendants.\n *\n * @see Docs https://reach.tech/menu-button#usemenubuttoncontext\n */\nfunction useMenuButtonContext(): MenuContextValue {\n  let {\n    state: { isExpanded },\n  } = React.useContext(MenuContext);\n  return React.useMemo(() => ({ isExpanded }), [isExpanded]);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * When a user's typed input matches the string displayed in a menu item, it is\n * expected that the matching menu item is selected. This is our matching\n * function.\n */\nfunction findItemFromTypeahead(\n  items: MenuButtonDescendant[],\n  string: string = \"\"\n) {\n  if (!string) {\n    return null;\n  }\n\n  const found = items.find((item) => {\n    return item.disabled\n      ? false\n      : item.element?.dataset?.valuetext?.toLowerCase().startsWith(string);\n  });\n  return found ? items.indexOf(found) : null;\n}\n\nfunction useMenuItemId(index: number | null) {\n  let { menuId } = React.useContext(MenuContext);\n  return index != null && index > -1\n    ? makeId(`option-${index}`, menuId)\n    : undefined;\n}\n\ninterface MenuButtonState {\n  isExpanded: boolean;\n  selectionIndex: number;\n  buttonId: null | string;\n  typeaheadQuery: string;\n}\n\ntype MenuButtonAction =\n  | { type: \"CLICK_MENU_ITEM\" }\n  | { type: \"CLOSE_MENU\"; payload: { buttonRef: ButtonRef } }\n  | { type: \"OPEN_MENU_AT_FIRST_ITEM\" }\n  | { type: \"OPEN_MENU_AT_INDEX\"; payload: { index: number } }\n  | { type: \"OPEN_MENU_CLEARED\" }\n  | {\n      type: \"SELECT_ITEM_AT_INDEX\";\n      payload: { max?: number; min?: number; index: number };\n    }\n  | { type: \"CLEAR_SELECTION_INDEX\" }\n  | { type: \"SET_BUTTON_ID\"; payload: string }\n  | { type: \"SEARCH_FOR_ITEM\"; payload: string };\n\nfunction isRightClick(nativeEvent: MouseEvent) {\n  return nativeEvent.which === 3 || nativeEvent.button === 2;\n}\n\nfunction focus<T extends HTMLElement = HTMLElement>(\n  element: T | undefined | null\n) {\n  element && element.focus();\n}\n\nfunction popoverContainsEventTarget(\n  popover: HTMLElement | null,\n  target: HTMLElement | EventTarget | null\n) {\n  return !!(popover && popover.contains(target as HTMLElement));\n}\n\nfunction reducer(\n  state: MenuButtonState,\n  action: MenuButtonAction = {} as MenuButtonAction\n): MenuButtonState {\n  switch (action.type) {\n    case CLICK_MENU_ITEM:\n      return {\n        ...state,\n        isExpanded: false,\n        selectionIndex: -1,\n      };\n    case CLOSE_MENU:\n      return {\n        ...state,\n        isExpanded: false,\n        selectionIndex: -1,\n      };\n    case OPEN_MENU_AT_FIRST_ITEM:\n      return {\n        ...state,\n        isExpanded: true,\n        selectionIndex: 0,\n      };\n    case OPEN_MENU_AT_INDEX:\n      return {\n        ...state,\n        isExpanded: true,\n        selectionIndex: action.payload.index,\n      };\n    case OPEN_MENU_CLEARED:\n      return {\n        ...state,\n        isExpanded: true,\n        selectionIndex: -1,\n      };\n    case SELECT_ITEM_AT_INDEX:\n      if (action.payload.index >= 0) {\n        return {\n          ...state,\n          selectionIndex:\n            action.payload.max != null\n              ? Math.min(Math.max(action.payload.index, 0), action.payload.max)\n              : Math.max(action.payload.index, 0),\n        };\n      }\n      return state;\n    case CLEAR_SELECTION_INDEX:\n      return {\n        ...state,\n        selectionIndex: -1,\n      };\n    case SET_BUTTON_ID:\n      return {\n        ...state,\n        buttonId: action.payload,\n      };\n    case SEARCH_FOR_ITEM:\n      if (typeof action.payload !== \"undefined\") {\n        return {\n          ...state,\n          typeaheadQuery: action.payload,\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype MenuButtonDescendant = Descendant<HTMLElement> & {\n  key: string;\n  isLink: boolean;\n  disabled?: boolean;\n};\n\ntype ButtonRef = React.RefObject<null | HTMLElement>;\ntype MenuRef = React.RefObject<null | HTMLElement>;\ntype PopoverRef = React.RefObject<null | HTMLElement>;\n\ninterface InternalMenuContextValue {\n  buttonRef: ButtonRef;\n  buttonClickedRef: React.MutableRefObject<boolean>;\n  dispatch: React.Dispatch<MenuButtonAction>;\n  menuId: string | undefined;\n  menuRef: MenuRef;\n  popoverRef: PopoverRef;\n  readyToSelect: React.MutableRefObject<boolean>;\n  selectCallbacks: React.MutableRefObject<(() => void)[]>;\n  state: MenuButtonState;\n}\n\ntype MenuContextValue = {\n  isExpanded: boolean;\n  // id: string | undefined;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Exports\n\nexport type {\n  MenuButtonProps,\n  MenuContextValue,\n  MenuItemProps,\n  MenuItemsProps,\n  MenuLinkProps,\n  MenuListProps,\n  MenuPopoverProps,\n  MenuProps,\n};\nexport {\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuItems,\n  MenuLink,\n  MenuList,\n  MenuPopover,\n  useMenuButtonContext,\n};\n"]},"metadata":{},"sourceType":"module"}