{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\build-youtube-final-code\\\\client\\\\src\\\\pages\\\\Subscriptions.js\";\n// @ts-nocheck\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { SubIcon } from \"../components/Icons\";\nimport SignUpCard from \"../components/SignUpCard\";\nimport { useAuth } from \"../context/auth-context\";\nimport Wrapper from \"../styles/Home\";\nimport VideoGrid from \"../styles/VideoGrid\";\nimport { client } from \"../utils/api-client\";\nimport Skeleton from \"../skeletons/HomeSkeleton\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ChannelSuggestions from \"../components/ChannelSuggestions\";\nimport VideoCard from \"../components/VideoCard\";\n\nfunction Subscriptions() {\n  const user = useAuth();\n  const {\n    data: feed,\n    isLoading,\n    isError,\n    error,\n    isSuccess\n  } = useQuery(\"Subscriptions\", () => client.get(\"/users/subscriptions\").then(res => res.data.feed), {\n    enabled: user\n  });\n\n  if (!user) {\n    return /*#__PURE__*/React.createElement(SignUpCard, {\n      icon: /*#__PURE__*/React.createElement(SubIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }),\n      title: \"Don't miss new videos\",\n      description: \"Sign in to see updates from your favorite YouTube channels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (isLoading) return /*#__PURE__*/React.createElement(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  });\n  if (isError) return /*#__PURE__*/React.createElement(ErrorMessage, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  });\n  if (!isLoading && !feed.length) return /*#__PURE__*/React.createElement(ChannelSuggestions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VideoGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, isSuccess ? feed.map(video => /*#__PURE__*/React.createElement(VideoCard, {\n    key: video.id,\n    video: video,\n    hideAvatar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })) : null));\n}\n\nexport default Subscriptions;","map":{"version":3,"sources":["C:/Users/User/Desktop/build-youtube-final-code/client/src/pages/Subscriptions.js"],"names":["React","useQuery","SubIcon","SignUpCard","useAuth","Wrapper","VideoGrid","client","Skeleton","ErrorMessage","ChannelSuggestions","VideoCard","Subscriptions","user","data","feed","isLoading","isError","error","isSuccess","get","then","res","enabled","length","marginTop","map","video","id"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAMC,IAAI,GAAGT,OAAO,EAApB;AACA,QAAM;AAAEU,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA,KAAlC;AAAyCC,IAAAA;AAAzC,MAAuDlB,QAAQ,CACnE,eADmE,EAEnE,MAAMM,MAAM,CAACa,GAAP,CAAW,sBAAX,EAAmCC,IAAnC,CAAyCC,GAAD,IAASA,GAAG,CAACR,IAAJ,CAASC,IAA1D,CAF6D,EAGnE;AACEQ,IAAAA,OAAO,EAAEV;AADX,GAHmE,CAArE;;AAQA,MAAI,CAACA,IAAL,EAAW;AACT,wBACE,oBAAC,UAAD;AACE,MAAA,IAAI,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;AAEE,MAAA,KAAK,EAAC,uBAFR;AAGE,MAAA,WAAW,EAAC,4DAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,MAAIG,SAAJ,EAAe,oBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACf,MAAIC,OAAJ,EAAa,oBAAO,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAI,CAACF,SAAD,IAAc,CAACD,IAAI,CAACS,MAAxB,EAAgC,oBAAO,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhC,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,GACNJ,IAAI,CAACW,GAAL,CAAUC,KAAD,iBACP,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,IAAA,KAAK,EAAED,KAAjC;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAIN,IALN,CAHF,CADF;AAaD;;AAED,eAAef,aAAf","sourcesContent":["// @ts-nocheck\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { SubIcon } from \"../components/Icons\";\nimport SignUpCard from \"../components/SignUpCard\";\nimport { useAuth } from \"../context/auth-context\";\nimport Wrapper from \"../styles/Home\";\nimport VideoGrid from \"../styles/VideoGrid\";\nimport { client } from \"../utils/api-client\";\nimport Skeleton from \"../skeletons/HomeSkeleton\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ChannelSuggestions from \"../components/ChannelSuggestions\";\nimport VideoCard from \"../components/VideoCard\";\n\nfunction Subscriptions() {\n  const user = useAuth();\n  const { data: feed, isLoading, isError, error, isSuccess } = useQuery(\n    \"Subscriptions\",\n    () => client.get(\"/users/subscriptions\").then((res) => res.data.feed),\n    {\n      enabled: user,\n    }\n  );\n\n  if (!user) {\n    return (\n      <SignUpCard\n        icon={<SubIcon />}\n        title=\"Don't miss new videos\"\n        description=\"Sign in to see updates from your favorite YouTube channels\"\n      />\n    );\n  }\n\n  if (isLoading) return <Skeleton />;\n  if (isError) return <ErrorMessage error={error} />;\n  if (!isLoading && !feed.length) return <ChannelSuggestions />;\n\n  return (\n    <Wrapper>\n      <div style={{ marginTop: \"1.5rem\" }}></div>\n\n      <VideoGrid>\n        {isSuccess\n          ? feed.map((video) => (\n              <VideoCard key={video.id} video={video} hideAvatar />\n            ))\n          : null}\n      </VideoGrid>\n    </Wrapper>\n  );\n}\n\nexport default Subscriptions;\n"]},"metadata":{},"sourceType":"module"}